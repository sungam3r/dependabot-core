---
http_interactions:
- request:
    method: get
    uri: https://www.nuget.org/api/v2/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      cache-control:
      - no-cache
      pragma:
      - no-cache
      content-type:
      - application/xml; charset=utf-8
      expires:
      - "-1"
      access-control-expose-headers:
      - Request-Context
      x-correlationid:
      - 476b8b7b-fd2b-484e-8a7b-d66823939338
      dataserviceversion:
      - '3.0'
      request-context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      content-security-policy:
      - frame-ancestors 'none'
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      date:
      - Fri, 04 Aug 2023 05:48:14 GMT
    body:
      encoding: ASCII-8BIT
      string: <?xml version="1.0" encoding="utf-8"?><service xml:base="https://www.nuget.org/api/v2"
        xmlns="http://www.w3.org/2007/app" xmlns:atom="http://www.w3.org/2005/Atom"><workspace><atom:title
        type="text">Default</atom:title><collection href="Packages"><atom:title type="text">Packages</atom:title></collection></workspace></service>
  recorded_at: Fri, 04 Aug 2023 05:48:15 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/7.4.0/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/FindPackagesById()?$select=Version,IsLatestVersion,ProjectUrl,Published&$skip=100&id=%27FakeItEasy%27
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      cache-control:
      - no-store, must-revalidate, no-cache
      pragma:
      - no-cache
      content-type:
      - application/atom+xml; type=feed; charset=utf-8
      content-encoding:
      - ''
      expires:
      - Wed, 26 Jul 2023 16:43:10 GMT
      access-control-expose-headers:
      - Request-Context
      x-nuget-customquery:
      - 'false'
      x-correlationid:
      - 44f17661-949e-4d6f-b252-0f033f02ec4d
      dataserviceversion:
      - '3.0'
      request-context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      content-security-policy:
      - frame-ancestors 'none'
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - HIT
      date:
      - Wed, 26 Jul 2023 16:43:09 GMT
    body:
      encoding: UTF-8
      string: <?xml version="1.0" encoding="utf-8"?><feed xml:base="https://www.nuget.org/api/v2"
        xmlns="http://www.w3.org/2005/Atom" xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices"
        xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata" xmlns:georss="http://www.georss.org/georss"
        xmlns:gml="http://www.opengis.net/gml"><m:count>118</m:count><id>http://schemas.datacontract.org/2004/07/</id><title
        /><updated>2023-07-26T15:52:23Z</updated><link rel="self" href="https://www.nuget.org/api/v2/Packages"
        /><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.2.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.2.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.2.0')"
        /><title type="text">FakeItEasy</title><updated>2019-09-05T10:33:02Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/5.2.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>5.2.0</d:Version><d:NormalizedVersion>5.2.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2019-09-05T10:33:02.393+00:00</d:Created><d:Dependencies>::net40|::net45|Castle.Core:[4.3.1,
        ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0, ):netstandard1.6|NETStandard.Library:[1.6.1,
        ):netstandard1.6|System.Collections.Concurrent:[4.3.0, ):netstandard1.6|System.Runtime.Loader:[4.0.0,
        ):netstandard1.6|Castle.Core:[4.3.1, ):netstandard2.0</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/5.2.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/5.2.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2019-09-05T10:33:02.393+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2019-09-05T10:33:02.393+00:00</d:Published><d:PackageHash>ahoB6JbtfOpPCZulY+KvvlLo2taDp6pUDCYRwOVGIPLr8vjpqMlqHgstxesf8XhDZldYk8O0nn+KikNt+Px+Nw==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">2071921</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/5.2.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">574264</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2019-09-05T10:37:14.073+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/5.2.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.3.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.3.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.3.0')"
        /><title type="text">FakeItEasy</title><updated>2019-10-16T10:15:38Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/5.3.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>5.3.0</d:Version><d:NormalizedVersion>5.3.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2019-10-16T10:15:38.533+00:00</d:Created><d:Dependencies>::net40|::net45|Castle.Core:[4.3.1,
        ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0, ):netstandard1.6|NETStandard.Library:[1.6.1,
        ):netstandard1.6|System.Collections.Concurrent:[4.3.0, ):netstandard1.6|System.Runtime.Loader:[4.0.0,
        ):netstandard1.6|Castle.Core:[4.3.1, ):netstandard2.0</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/5.3.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/5.3.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2019-10-16T10:15:38.533+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2019-10-16T10:15:38.533+00:00</d:Published><d:PackageHash>df9aD9b2f8pMpsIdD11SiDmDUK3kQcv8zidfCL10EZHViMvXT/EbWEO0ZMJ7DvDiTCb0F0o/naJj4zUxQ+/tkg==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">2085892</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/5.3.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">71772</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2019-10-16T10:19:49.227+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/5.3.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.0')"
        /><title type="text">FakeItEasy</title><updated>2019-10-23T11:14:00Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/5.4.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>5.4.0</d:Version><d:NormalizedVersion>5.4.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2019-10-23T11:14:00.06+00:00</d:Created><d:Dependencies>::net40|::net45|Castle.Core:[4.3.1,
        ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0, ):netstandard1.6|NETStandard.Library:[1.6.1,
        ):netstandard1.6|System.Collections.Concurrent:[4.3.0, ):netstandard1.6|System.Runtime.Loader:[4.0.0,
        ):netstandard1.6|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/5.4.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/5.4.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2019-10-23T11:14:00.06+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2019-10-23T11:14:00.06+00:00</d:Published><d:PackageHash>wV2i+u+ECI/U1fTufXBxKdWs6MtKrAKJzzBf923EXlcamZslVPYg+EaWNiitVpup9iCpI6xBw4jrxKbK54kz+w==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">2429130</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/5.4.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">275413</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2019-10-23T11:18:12.79+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/5.4.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.1')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.1')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.4.1')"
        /><title type="text">FakeItEasy</title><updated>2019-11-14T13:44:07Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/5.4.1" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>5.4.1</d:Version><d:NormalizedVersion>5.4.1</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2019-11-14T13:44:07.777+00:00</d:Created><d:Dependencies>::net40|::net45|Castle.Core:[4.3.1,
        ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0, ):netstandard1.6|NETStandard.Library:[1.6.1,
        ):netstandard1.6|System.Collections.Concurrent:[4.3.0, ):netstandard1.6|System.Runtime.Loader:[4.0.0,
        ):netstandard1.6|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/5.4.1</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/5.4.1/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2019-11-14T13:44:07.777+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2019-11-14T13:44:07.777+00:00</d:Published><d:PackageHash>umZUyT6ZxL/gx6AUU3hevR0594mg1P+bxEZBACm2ve/2Mkzmn6w1Y2Qwt4ctfVvvDmnbYXzTN9sKuDB6PQhCrg==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">2431317</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/5.4.1/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">123039</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2019-11-14T13:46:10.203+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/5.4.1/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.5.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.5.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='5.5.0')"
        /><title type="text">FakeItEasy</title><updated>2019-11-25T11:38:12Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/5.5.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>5.5.0</d:Version><d:NormalizedVersion>5.5.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2019-11-25T11:38:12.297+00:00</d:Created><d:Dependencies>::net40|::net45|Castle.Core:[4.3.1,
        ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0, ):netstandard1.6|NETStandard.Library:[1.6.1,
        ):netstandard1.6|System.Collections.Concurrent:[4.3.0, ):netstandard1.6|System.Runtime.Loader:[4.0.0,
        ):netstandard1.6|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/5.5.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/5.5.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2019-11-25T11:38:12.297+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2019-11-25T11:38:12.297+00:00</d:Published><d:PackageHash>J1DGaqSR/0vkTuEScBNAzAPlfrYHvOWnQDA7nGpQ0jNSHCt5AiLWsfKcn1dom7aRqFrebKr22gLGbL2t+RiojA==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">2431483</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/5.5.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">1326511</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2019-11-25T11:40:12.98+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/5.5.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.0')"
        /><title type="text">FakeItEasy</title><updated>2020-01-17T11:44:42Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/6.0.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>6.0.0</d:Version><d:NormalizedVersion>6.0.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2020-01-17T11:44:42.013+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net40|Castle.Core:[4.3.1, ):net45|Castle.Core:[4.3.1, ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0,
        ):netstandard1.6|NETStandard.Library:[1.6.1, ):netstandard1.6|System.Collections.Concurrent:[4.3.0,
        ):netstandard1.6|System.Runtime.Loader:[4.0.0, ):netstandard1.6|Castle.Core:[4.3.1,
        ):netstandard2.0|Castle.Core:[4.3.1, ):netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/6.0.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/6.0.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2020-01-17T11:44:42.013+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2020-01-17T11:44:42.013+00:00</d:Published><d:PackageHash>7wS7MoZnCxlpQjYUkffoUQjdWTlNBn9e+4BSbkcvaolnggoZaDvG+qDVUDvrmbfcb3FDW9vHmHyxOKxYI5bovw==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">870205</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/6.0.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">1965576</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2020-01-17T11:46:43.36+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/6.0.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.1')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.1')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.0.1')"
        /><title type="text">FakeItEasy</title><updated>2020-04-10T17:39:29Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/6.0.1" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>6.0.1</d:Version><d:NormalizedVersion>6.0.1</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2020-04-10T17:39:29.6+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net40|Castle.Core:[4.3.1, ):net45|Castle.Core:[4.3.1, ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0,
        ):netstandard1.6|NETStandard.Library:[1.6.1, ):netstandard1.6|System.Collections.Concurrent:[4.3.0,
        ):netstandard1.6|System.Runtime.Loader:[4.0.0, ):netstandard1.6|Castle.Core:[4.3.1,
        ):netstandard2.0|Castle.Core:[4.3.1, ):netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/6.0.1</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/6.0.1/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2020-04-10T17:39:29.6+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2020-04-10T17:39:29.6+00:00</d:Published><d:PackageHash>o2vp1L/HaHnSEvlWVPV9/Rq0+BlWpWTAFqv6X5+OR+Abw7ITCnz611/YPSoaL4+xD7vgFP/VBK8phVBQduKr8w==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">874726</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/6.0.1/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">733083</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2020-04-10T17:41:32.677+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/6.0.1/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.1.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.1.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.1.0')"
        /><title type="text">FakeItEasy</title><updated>2020-06-08T10:41:56Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/6.1.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>6.1.0</d:Version><d:NormalizedVersion>6.1.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2020-06-08T10:41:56.46+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net40|Castle.Core:[4.3.1, ):net45|Castle.Core:[4.3.1, ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0,
        ):netstandard1.6|NETStandard.Library:[1.6.1, ):netstandard1.6|System.Collections.Concurrent:[4.3.0,
        ):netstandard1.6|System.Runtime.Loader:[4.0.0, ):netstandard1.6|Castle.Core:[4.3.1,
        ):netstandard2.0|Castle.Core:[4.3.1, ):netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/6.1.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/6.1.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2020-06-08T10:41:56.46+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2020-06-08T10:41:56.46+00:00</d:Published><d:PackageHash>wUPFxBvs595A0DA6ZtRHA2N+g/dpqPBaht+kz9vCGU6NT3eq8SSssQXZ5bxyHMvsvoAGK4OQGiZYcPO9pDE34Q==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">881020</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/6.1.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">872019</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2020-06-08T10:44:00.097+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/6.1.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.0')"
        /><title type="text">FakeItEasy</title><updated>2020-07-23T10:22:03Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/6.2.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>6.2.0</d:Version><d:NormalizedVersion>6.2.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2020-07-23T10:22:03.133+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net40|Castle.Core:[4.3.1, ):net45|Castle.Core:[4.3.1, ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0,
        ):netstandard1.6|NETStandard.Library:[1.6.1, ):netstandard1.6|System.Collections.Concurrent:[4.3.0,
        ):netstandard1.6|System.Runtime.Loader:[4.0.0, ):netstandard1.6|Castle.Core:[4.3.1,
        ):netstandard2.0|Castle.Core:[4.3.1, ):netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/6.2.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/6.2.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2020-07-23T10:22:03.133+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2020-07-23T10:22:03.133+00:00</d:Published><d:PackageHash>EsC9eunNVm4NNyjc/kadQPRTu6y8Axjbe9hUE3xi3PQzmBtcC0TF3vshpbB/i+ZQ0/vGAxbGO89dJZhhrm2qjg==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">881349</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/6.2.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">531364</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2020-07-23T10:24:06.543+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/6.2.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.1')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.1')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='6.2.1')"
        /><title type="text">FakeItEasy</title><updated>2020-09-02T10:49:10Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/6.2.1" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>6.2.1</d:Version><d:NormalizedVersion>6.2.1</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2020-09-02T10:49:10.703+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net40|Castle.Core:[4.3.1, ):net45|Castle.Core:[4.3.1, ):netstandard1.6|Microsoft.Extensions.DependencyModel:[1.0.0,
        ):netstandard1.6|NETStandard.Library:[1.6.1, ):netstandard1.6|System.Collections.Concurrent:[4.3.0,
        ):netstandard1.6|System.Runtime.Loader:[4.0.0, ):netstandard1.6|Castle.Core:[4.3.1,
        ):netstandard2.0|Castle.Core:[4.3.1, ):netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/6.2.1</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/6.2.1/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2020-09-02T10:49:10.703+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2020-09-02T10:49:10.703+00:00</d:Published><d:PackageHash>TjFhHgZU7IpnPXFnJaXXM2Y3Hrszn+DKPFJbI+dsGkl2GMw4HUD5Gey4l+/L0q4fdSp9k0++F6NNkkfqPFRx+w==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">893137</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/6.2.1/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">2741984</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2020-09-02T10:51:14.627+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/6.2.1/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.0')"
        /><title type="text">FakeItEasy</title><updated>2021-03-15T10:51:18Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.0.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.0.0</d:Version><d:NormalizedVersion>7.0.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2021-03-15T10:51:18.767+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.0.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.0.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2021-03-15T10:51:18.767+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2021-03-15T10:51:18.767+00:00</d:Published><d:PackageHash>hu2AV0zo39gXlmUi+u8ufNsqYAm/UTnECuiPUuAa5smJp8CCw1rFJjlo9K9aPly5qaeyu8N0HSdeyLY0rhndKQ==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">737291</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">233747</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-03-15T10:52:54.693+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.1')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.1')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.1')"
        /><title type="text">FakeItEasy</title><updated>2021-03-30T18:33:02Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.0.1" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.0.1</d:Version><d:NormalizedVersion>7.0.1</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2021-03-30T18:33:02.16+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.0.1</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.0.1/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2021-03-30T18:33:02.16+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2021-03-30T18:33:02.16+00:00</d:Published><d:PackageHash>MpIwbzU+hOQEjp0QYNETAzRBa75pfYlU5VFmfOJ3men8SLPDxHIiLGoyH4GrvsZJlQOaUOVlNl2ZfG4cp1Swcg==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">737654</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.1/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">467278</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-03-30T18:36:04.41+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.1/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.2')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.2')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.0.2')"
        /><title type="text">FakeItEasy</title><updated>2021-05-04T21:03:19Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.0.2" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.0.2</d:Version><d:NormalizedVersion>7.0.2</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2021-05-04T21:03:19.2+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.0.2</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.0.2/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2021-05-04T21:03:19.2+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2021-05-04T21:03:19.2+00:00</d:Published><d:PackageHash>tMrTbmzaIvPFFwotg5pSz5CQFNH0KAHcNPSWWy//3dgDCm/I7nHiO0dZPATGxhcNw9x3yjeJoSraGM1WGMg9ig==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">738373</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.2/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">353748</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-05-04T21:04:55.96+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.0.2/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.1.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.1.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.1.0')"
        /><title type="text">FakeItEasy</title><updated>2021-06-07T10:21:02Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.1.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.1.0</d:Version><d:NormalizedVersion>7.1.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2021-06-07T10:21:02.05+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.1.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.1.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2021-06-07T10:21:02.05+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2021-06-07T10:21:02.05+00:00</d:Published><d:PackageHash>6DmqoO4PRsWPvv9Ji1fD6hvGySo7Nm7OeodAlNO4UUIrZ6So2BLFSYM1smNaU23eXtX1knoIs5yR2QTDNt7pJw==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">752530</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.1.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">926691</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-06-07T10:23:06.397+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.1.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.2.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.2.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.2.0')"
        /><title type="text">FakeItEasy</title><updated>2021-09-01T12:48:08Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.2.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.2.0</d:Version><d:NormalizedVersion>7.2.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2021-09-01T12:48:08.863+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.2.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.2.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2021-09-01T12:48:08.863+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2021-09-01T12:48:08.863+00:00</d:Published><d:PackageHash>co5sNP3MY+SAyPvjaKG0Jw3+4dEhSZ/S5TgzmuuzUsm/5+ruxfA301pS9MPPH16b/DeNpqFPOMX+ad1K2+k6iQ==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">754542</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.2.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">1792760</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-09-01T12:50:12.94+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.2.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.0')"
        /><title type="text">FakeItEasy</title><updated>2022-01-17T11:50:21Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.3.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.3.0</d:Version><d:NormalizedVersion>7.3.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2022-01-17T11:50:21.987+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.3.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.3.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2022-01-17T11:50:21.987+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2022-01-17T11:50:21.987+00:00</d:Published><d:PackageHash>V6S4CZqdVKH/orn3w6CEWRppwiXceiWEfGRgFBqJaft6cXSdoMVtG+2vv8MWcG91QNllE3eTqc8/GvHXYaX4fA==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">759904</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.3.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">810708</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2022-01-17T11:52:23.263+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.3.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.1')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.1')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.3.1')"
        /><title type="text">FakeItEasy</title><updated>2022-03-08T18:34:33Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.3.1" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.3.1</d:Version><d:NormalizedVersion>7.3.1</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2022-03-08T18:34:33.377+00:00</d:Created><d:Dependencies>Castle.Core:[4.3.1,
        ):net45|Castle.Core:[4.3.1, ):net5.0|Castle.Core:[4.3.1, ):netstandard2.0|Castle.Core:[4.3.1,
        ):netstandard2.1</d:Dependencies><d:Description>It's faking amazing! The easy
        mocking library for .NET that works great in C# and VB.NET alike. No need
        to know the difference between a stub, a mock or a spy, everything's a fake!
        The easy to use, refactoring friendly API makes faking a breeze.</d:Description><d:DownloadCount
        m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.3.1</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.3.1/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">false</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">false</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2022-03-08T18:34:33.377+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2022-03-08T18:34:33.377+00:00</d:Published><d:PackageHash>1Cm9rS+pEmP2imhA+H+WPR8dhJlhJQ+OHTGjk0BZMexJ0M4rZc+tarBbWSJUGUrhf3/MgpjJJU665JtbCTMDjQ==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">759865</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.3.1/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">3961381</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2022-03-08T18:36:35.72+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.3.1/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.4.0')</id><category
        term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"
        /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.4.0')"
        /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='FakeItEasy',Version='7.4.0')"
        /><title type="text">FakeItEasy</title><updated>2023-04-23T13:17:30Z</updated><author><name>Patrik
        Hägne, FakeItEasy contributors</name></author><content type="application/zip"
        src="https://www.nuget.org/api/v2/package/FakeItEasy/7.4.0" /><m:properties><d:Id>FakeItEasy</d:Id><d:Version>7.4.0</d:Version><d:NormalizedVersion>7.4.0</d:NormalizedVersion><d:Authors>Patrik
        Hägne, FakeItEasy contributors</d:Authors><d:Copyright>Copyright (c) FakeItEasy
        contributors. (fakeiteasyfx@gmail.com)</d:Copyright><d:Created m:type="Edm.DateTime">2023-04-23T13:17:30.613+00:00</d:Created><d:Dependencies>Castle.Core:4.3.1:net45|Castle.Core:4.3.1:net5.0|Castle.Core:4.3.1:netstandard2.0|Castle.Core:4.3.1:netstandard2.1</d:Dependencies><d:Description>It's
        faking amazing! The easy mocking library for .NET that works great in C# and
        VB.NET alike. No need to know the difference between a stub, a mock or a spy,
        everything's a fake! The easy to use, refactoring friendly API makes faking
        a breeze.</d:Description><d:DownloadCount m:type="Edm.Int64">31091158</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/FakeItEasy/7.4.0</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.4.0/icon</d:IconUrl><d:IsLatestVersion
        m:type="Edm.Boolean">true</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">true</d:IsAbsoluteLatestVersion><d:IsPrerelease
        m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated
        m:type="Edm.DateTime">2023-04-23T13:17:30.613+00:00</d:LastUpdated><d:Published
        m:type="Edm.DateTime">2023-04-23T13:17:30.613+00:00</d:Published><d:PackageHash>iRT1OUtjU9DdjmEgRT7zxaK1UP4vPGYbp+36W+VEWCMofQA6NCuMDh8oWNNxdStK4uScOG7/cnC785Qx6XcL+Q==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize
        m:type="Edm.Int64">763952</d:PackageSize><d:ProjectUrl>https://fakeiteasy.github.io/</d:ProjectUrl><d:ReportAbuseUrl>https://www.nuget.org/packages/FakeItEasy/7.4.0/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>https://github.com/FakeItEasy/FakeItEasy/releases</d:ReleaseNotes><d:RequireLicenseAcceptance
        m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary></d:Summary><d:Tags>TDD
        unittesting mocks mocking fakes faking stubs stubbing spy spies doubles isolation
        substitutes substitution</d:Tags><d:Title>FakeItEasy - Mocking made faking
        easy!</d:Title><d:VersionDownloadCount m:type="Edm.Int64">312205</d:VersionDownloadCount><d:MinClientVersion
        m:null="true" /><d:LastEdited m:type="Edm.DateTime">2023-04-23T13:20:32.34+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/FakeItEasy/7.4.0/license</d:LicenseUrl><d:LicenseNames
        m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry></feed>
  recorded_at: Wed, 26 Jul 2023 16:43:10 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      cache-control:
      - no-cache
      pragma:
      - no-cache
      content-type:
      - application/xml; charset=utf-8
      expires:
      - "-1"
      access-control-expose-headers:
      - Request-Context
      x-correlationid:
      - 80b5e269-bc09-4b31-8c88-fcd7900c51fd
      dataserviceversion:
      - '3.0'
      request-context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      content-security-policy:
      - frame-ancestors 'none'
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      date:
      - Wed, 26 Jul 2023 21:15:01 GMT
    body:
      encoding: ASCII-8BIT
      string: <?xml version="1.0" encoding="utf-8"?><service xml:base="https://www.nuget.org/api/v2"
        xmlns="http://www.w3.org/2007/app" xmlns:atom="http://www.w3.org/2005/Atom"><workspace><atom:title
        type="text">Default</atom:title><collection href="Packages"><atom:title type="text">Packages</atom:title></collection></workspace></service>
  recorded_at: Wed, 26 Jul 2023 21:15:02 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/FindPackagesById()?id=%27FakeItEasy%27
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      cache-control:
      - no-store, must-revalidate, no-cache
      pragma:
      - no-cache
      content-type:
      - application/atom+xml; type=feed; charset=utf-8
      content-encoding:
      - ''
      expires:
      - Wed, 26 Jul 2023 21:15:02 GMT
      access-control-expose-headers:
      - Request-Context
      x-nuget-customquery:
      - 'false'
      x-correlationid:
      - d787d256-8277-48e7-8e14-de403a9abbf1
      dataserviceversion:
      - '3.0'
      request-context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      content-security-policy:
      - frame-ancestors 'none'
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - HIT
      date:
      - Wed, 26 Jul 2023 21:15:01 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Jul 2023 21:15:02 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/FindPackagesById()?$skip=100&id=%27FakeItEasy%27
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      cache-control:
      - no-store, must-revalidate, no-cache
      pragma:
      - no-cache
      content-type:
      - application/atom+xml; type=feed; charset=utf-8
      content-encoding:
      - ''
      expires:
      - Wed, 26 Jul 2023 21:15:03 GMT
      access-control-expose-headers:
      - Request-Context
      x-nuget-customquery:
      - 'false'
      x-correlationid:
      - 4691102c-de57-47a2-a145-d1ead6c1c64a
      dataserviceversion:
      - '3.0'
      request-context:
      - appId=cid-v1:338f6804-b1a9-4fe3-bba7-c93064e7ae7b
      content-security-policy:
      - frame-ancestors 'none'
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
      x-content-type-options:
      - nosniff
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - HIT
      date:
      - Wed, 26 Jul 2023 21:15:02 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Jul 2023 21:15:03 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/3.1.0/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/1.14.0/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/1.7.4507.61/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/1.7.4109.1/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/1.5.3970.199/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://www.nuget.org/api/v2/fakeiteasy/1.0.0.5/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 25 Jul 2023 17:50:27 GMT
      content-type:
      - text/xml
      content-length:
      - '1662'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAF053F9'
      x-ms-request-id:
      - a910c712-801e-0041-3220-bfe513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230725T175027Z-sy3fsgu1dp6sxbd5fgf4ebp2q800000008b000000000smyb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.1.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.PlatformAbstractions\" version=\"[1.1.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 25 Jul 2023 17:50:26 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/fakeiteasy/4.7.1/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:36 GMT
      content-type:
      - text/xml
      content-length:
      - '1978'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Wed, 17 Oct 2018 02:31:16 GMT
      etag:
      - '0x8D633D89D332F2E'
      x-ms-request-id:
      - 8b728f57-001e-002d-4f8d-d40e84000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001636Z-1kuytze0v16ptb2ch1y7x7pr2w00000007u0000000012ntn
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGE+DQogICAgPGlkPkZha2VJdEVhc3k8L2lkPg0KICAgIDx2ZXJzaW9uPjQuNy4xPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5GYWtlSXRFYXN5IC0gTW9ja2luZyBtYWRlIGZha2luZyBlYXN5ITwvdGl0bGU+DQogICAgPGF1dGhvcnM+UGF0cmlrIEjDpGduZSwgRmFrZUl0RWFzeSBjb250cmlidXRvcnM8L2F1dGhvcnM+DQogICAgPG93bmVycz5QYXRyaWsgSMOkZ25lLCBGYWtlSXRFYXN5IGNvbnRyaWJ1dG9yczwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+ZmFsc2U8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwczovL2dpdGh1Yi5jb20vRmFrZUl0RWFzeS9GYWtlSXRFYXN5L2Jsb2IvbWFzdGVyL0xpY2Vuc2UudHh0PC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZmFrZWl0ZWFzeS5naXRodWIuaW8vPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHBzOi8vZmFrZWl0ZWFzeS5naXRodWIuaW8vaW1nL2Zha2VpdGVhc3lfbG9nb18yNTZfc3F1YXJlX3doaXRlLnBuZzwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+SXQncyBmYWtpbmcgYW1hemluZyEgVGhlIGVhc3kgbW9ja2luZyBmcmFtZXdvcmsgZm9yIC5ORVQgdGhhdCB3b3JrcyBncmVhdCBpbiBDIyBhbmQgVkIuTkVUIGFsaWtlLiBObyBuZWVkIHRvIGtub3cgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhIHN0dWIsIGEgbW9jayBvciBhIHNweSwgZXZlcnl0aGluZydzIGEgZmFrZSEgVGhlIGVhc3kgdG8gdXNlLCByZWZhY3RvcmluZyBmcmllbmRseSBBUEkgbWFrZXMgZmFraW5nIGEgYnJlZXplLjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dpdGh1Yi5jb20vRmFrZUl0RWFzeS9GYWtlSXRFYXN5L3JlbGVhc2VzPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD5Db3B5cmlnaHQgKGMpIEZha2VJdEVhc3kgY29udHJpYnV0b3JzLiAoZmFrZWl0ZWFzeWZ4QGdtYWlsLmNvbSk8L2NvcHlyaWdodD4NCiAgICA8dGFncz5UREQgdW5pdHRlc3RpbmcgbW9ja3MgbW9ja2luZyBmYWtlcyBmYWtpbmcgc3R1YnMgc3R1YmJpbmcgc3B5IHNwaWVzIGRvdWJsZXMgaXNvbGF0aW9uIHN1YnN0aXR1dGVzIHN1YnN0aXR1dGlvbjwvdGFncz4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjYiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTkVUU3RhbmRhcmQuTGlicmFyeSIgdmVyc2lvbj0iMS42LjEiIGV4Y2x1ZGU9IkJ1aWxkLEFuYWx5emVycyIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IkNhc3RsZS5Db3JlIiB2ZXJzaW9uPSI0LjMuMSIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0LkV4dGVuc2lvbnMuRGVwZW5kZW5jeU1vZGVsIiB2ZXJzaW9uPSIxLjAuMCIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJCdWlsZCxBbmFseXplcnMiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5Mb2FkZXIiIHZlcnNpb249IjQuMC4wIiBleGNsdWRlPSJCdWlsZCxBbmFseXplcnMiIC8+DQogICAgICA8L2dyb3VwPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 00:16:36 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/fakeiteasy/4.7.1/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:36 GMT
      content-type:
      - text/xml
      content-length:
      - '1978'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Wed, 17 Oct 2018 02:31:16 GMT
      etag:
      - '0x8D633D89D332F2E'
      x-ms-request-id:
      - 8b728f57-001e-002d-4f8d-d40e84000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001636Z-1kuytze0v16ptb2ch1y7x7pr2w00000007x000000000ckp1
      x-cache:
      - TCP_HIT
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGE+DQogICAgPGlkPkZha2VJdEVhc3k8L2lkPg0KICAgIDx2ZXJzaW9uPjQuNy4xPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5GYWtlSXRFYXN5IC0gTW9ja2luZyBtYWRlIGZha2luZyBlYXN5ITwvdGl0bGU+DQogICAgPGF1dGhvcnM+UGF0cmlrIEjDpGduZSwgRmFrZUl0RWFzeSBjb250cmlidXRvcnM8L2F1dGhvcnM+DQogICAgPG93bmVycz5QYXRyaWsgSMOkZ25lLCBGYWtlSXRFYXN5IGNvbnRyaWJ1dG9yczwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+ZmFsc2U8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwczovL2dpdGh1Yi5jb20vRmFrZUl0RWFzeS9GYWtlSXRFYXN5L2Jsb2IvbWFzdGVyL0xpY2Vuc2UudHh0PC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZmFrZWl0ZWFzeS5naXRodWIuaW8vPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHBzOi8vZmFrZWl0ZWFzeS5naXRodWIuaW8vaW1nL2Zha2VpdGVhc3lfbG9nb18yNTZfc3F1YXJlX3doaXRlLnBuZzwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+SXQncyBmYWtpbmcgYW1hemluZyEgVGhlIGVhc3kgbW9ja2luZyBmcmFtZXdvcmsgZm9yIC5ORVQgdGhhdCB3b3JrcyBncmVhdCBpbiBDIyBhbmQgVkIuTkVUIGFsaWtlLiBObyBuZWVkIHRvIGtub3cgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhIHN0dWIsIGEgbW9jayBvciBhIHNweSwgZXZlcnl0aGluZydzIGEgZmFrZSEgVGhlIGVhc3kgdG8gdXNlLCByZWZhY3RvcmluZyBmcmllbmRseSBBUEkgbWFrZXMgZmFraW5nIGEgYnJlZXplLjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dpdGh1Yi5jb20vRmFrZUl0RWFzeS9GYWtlSXRFYXN5L3JlbGVhc2VzPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD5Db3B5cmlnaHQgKGMpIEZha2VJdEVhc3kgY29udHJpYnV0b3JzLiAoZmFrZWl0ZWFzeWZ4QGdtYWlsLmNvbSk8L2NvcHlyaWdodD4NCiAgICA8dGFncz5UREQgdW5pdHRlc3RpbmcgbW9ja3MgbW9ja2luZyBmYWtlcyBmYWtpbmcgc3R1YnMgc3R1YmJpbmcgc3B5IHNwaWVzIGRvdWJsZXMgaXNvbGF0aW9uIHN1YnN0aXR1dGVzIHN1YnN0aXR1dGlvbjwvdGFncz4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjYiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTkVUU3RhbmRhcmQuTGlicmFyeSIgdmVyc2lvbj0iMS42LjEiIGV4Y2x1ZGU9IkJ1aWxkLEFuYWx5emVycyIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IkNhc3RsZS5Db3JlIiB2ZXJzaW9uPSI0LjMuMSIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0LkV4dGVuc2lvbnMuRGVwZW5kZW5jeU1vZGVsIiB2ZXJzaW9uPSIxLjAuMCIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJCdWlsZCxBbmFseXplcnMiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5Mb2FkZXIiIHZlcnNpb249IjQuMC4wIiBleGNsdWRlPSJCdWlsZCxBbmFseXplcnMiIC8+DQogICAgICA8L2dyb3VwPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 00:16:36 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/castle.core/4.3.1/castle.core.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:36 GMT
      content-type:
      - text/xml
      content-length:
      - '3429'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Mon, 15 Oct 2018 04:00:54 GMT
      etag:
      - '0x8D63252CDEA860B'
      x-ms-request-id:
      - 7ea7efb3-501e-0030-3e8d-d40338000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001636Z-m5sfzwkvw95dr13hhsxhts877800000005tg00000000k1s0
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Castle.Core</id>\r\n    <version>4.3.1</version>\r\n
        \   <authors>Castle Project Contributors</authors>\r\n    <owners>Castle Project
        Contributors</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n
        \   <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0.html</licenseUrl>\r\n
        \   <projectUrl>http://www.castleproject.org/</projectUrl>\r\n    <iconUrl>http://www.castleproject.org/img/castle-logo.png</iconUrl>\r\n
        \   <description>Castle Core, including DynamicProxy, Logging Abstractions
        and DictionaryAdapter</description>\r\n    <copyright>Copyright (c) 2004-2018
        Castle Project - http://www.castleproject.org/</copyright>\r\n    <tags>castle
        dynamicproxy dynamic proxy dynamicproxy2 dictionaryadapter emailsender</tags>\r\n
        \   <repository type=\"git\" url=\"https://github.com/castleproject/Core\"
        />\r\n    <dependencies>\r\n      <group targetFramework=\".NETFramework3.5\"
        />\r\n      <group targetFramework=\".NETFramework4.0\" />\r\n      <group
        targetFramework=\".NETFramework4.5\" />\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"NETStandard.Library\" version=\"1.6.1\" exclude=\"Build,Analyzers\"
        />\r\n        <dependency id=\"System.Collections.Specialized\" version=\"4.3.0\"
        exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.ComponentModel\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.ComponentModel.TypeConverter\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Diagnostics.TraceSource\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Dynamic.Runtime\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection.Emit\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection.TypeExtensions\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Xml.XmlDocument\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n      <group
        targetFramework=\".NETStandard1.5\">\r\n        <dependency id=\"NETStandard.Library\"
        version=\"1.6.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Collections.Specialized\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.ComponentModel\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.ComponentModel.TypeConverter\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Diagnostics.TraceSource\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Dynamic.Runtime\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection.Emit\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Reflection.TypeExtensions\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Xml.XmlDocument\"
        version=\"4.3.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n
        \   <frameworkAssemblies>\r\n      <frameworkAssembly assemblyName=\"System.Configuration\"
        targetFramework=\".NETFramework3.5, .NETFramework4.0, .NETFramework4.5\" />\r\n
        \   </frameworkAssemblies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 22 Aug 2023 00:16:36 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.diagnostics.tracesource/4.3.0/system.diagnostics.tracesource.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:37 GMT
      content-type:
      - text/xml
      content-length:
      - '2744'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:54 GMT
      etag:
      - '0x8D661479284B5B5'
      x-ms-request-id:
      - b8784f74-901e-0072-7e8d-d4bab8000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001636Z-mq1r9nwmg15qp49nf9afzrca60000000082g00000001bky9
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5EaWFnbm9zdGljcy5UcmFjZVNvdXJjZTwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5EaWFnbm9zdGljcy5UcmFjZVNvdXJjZTwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyB0aGF0IGhlbHAgeW91IHRyYWNlIHRoZSBleGVjdXRpb24gb2YgeW91ciBjb2RlLiBEZXZlbG9wZXJzIHNob3VsZCBwcmVmZXIgdGhlIGNsYXNzZXMgaW4gdGhlIEVUVy1iYXNlZCBTeXN0ZW0uRGlhZ25vc3RpY3MuVHJhY2luZyBwYWNrYWdlLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkRpYWdub3N0aWNzLlRyYWNlTGlzdGVuZXINClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjZUxldmVsDQpTeXN0ZW0uRGlhZ25vc3RpY3MuVHJhY2VTb3VyY2UNClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjZUV2ZW50VHlwZQ0KU3lzdGVtLkRpYWdub3N0aWNzLkRlZmF1bHRUcmFjZUxpc3RlbmVyDQpTeXN0ZW0uRGlhZ25vc3RpY3MuVHJhY2UNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0icnVudGltZS5uYXRpdmUuU3lzdGVtIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 00:16:36 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection.emit/4.3.0/system.reflection.emit.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:37 GMT
      content-type:
      - text/xml
      content-length:
      - '2326'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D0295ED9'
      x-ms-request-id:
      - fd6977cd-401e-0061-6a8d-d49eb4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001637Z-m5sfzwkvw95dr13hhsxhts877800000005v000000000d64e
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uLkVtaXQ8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUmVmbGVjdGlvbi5FbWl0PC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjbGFzc2VzIHRoYXQgYWxsb3cgYSBjb21waWxlciBvciB0b29sIHRvIGVtaXQgbWV0YWRhdGEgYW5kIG9wdGlvbmFsbHkgZ2VuZXJhdGUgYSBQRSBmaWxlIG9uIGRpc2suIFRoZSBwcmltYXJ5IGNsaWVudHMgb2YgdGhlc2UgY2xhc3NlcyBhcmUgc2NyaXB0IGVuZ2luZXMgYW5kIGNvbXBpbGVycy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuQXNzZW1ibHlCdWlsZGVyDQpTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkZpZWxkQnVpbGRlcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5UeXBlQnVpbGRlcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5NZXRob2RCdWlsZGVyDQpTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkNvbnN0cnVjdG9yQnVpbGRlcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5HZW5lcmljVHlwZVBhcmFtZXRlckJ1aWxkZXINClN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuTW9kdWxlQnVpbGRlcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5Qcm9wZXJ0eUJ1aWxkZXINClN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuQXNzZW1ibHlCdWlsZGVyQWNjZXNzDQpTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkV2ZW50QnVpbGRlcg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4xIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LklMR2VuZXJhdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 00:16:37 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection.emit.ilgeneration/4.3.0/system.reflection.emit.ilgeneration.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:37 GMT
      content-type:
      - text/xml
      content-length:
      - '2140'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:28 GMT
      etag:
      - '0x8D66147A6D60EC1'
      x-ms-request-id:
      - a5515707-201e-0005-4b8d-d46f2c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001637Z-3fap7etuuh5ub1vvx0gtr24p1w00000003dg00000000x34m
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuSUxHZW5lcmF0aW9uPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5JTEdlbmVyYXRpb248L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgdGhhdCBhbGxvdyBhIGNvbXBpbGVyIG9yIHRvb2wgdG8gZW1pdCBNaWNyb3NvZnQgaW50ZXJtZWRpYXRlIGxhbmd1YWdlIChNU0lMKS4gVGhlIHByaW1hcnkgY2xpZW50cyBvZiB0aGVzZSBjbGFzc2VzIGFyZSBzY3JpcHQgZW5naW5lcyBhbmQgY29tcGlsZXJzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5JTEdlbmVyYXRvcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5MYWJlbA0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5DdXN0b21BdHRyaWJ1dGVCdWlsZGVyDQpTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkxvY2FsQnVpbGRlcg0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5QYXJhbWV0ZXJCdWlsZGVyDQpTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LlNpZ25hdHVyZUhlbHBlcg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlNDkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 00:16:37 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.extensions.dependencymodel/1.0.0/microsoft.extensions.dependencymodel.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:37 GMT
      content-type:
      - text/xml
      content-length:
      - '1236'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 23:04:44 GMT
      etag:
      - '0x8D6614F5F2A6EE6'
      x-ms-request-id:
      - 74a049c1-e01e-0035-6b8d-d4d1e3000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001637Z-v97597zv4p3uve5suv0fuhn1f000000007a0000000025mxc
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.Extensions.DependencyModel</id>\r\n    <version>1.0.0</version>\r\n
        \   <authors>Microsoft.Extensions.DependencyModel</authors>\r\n    <owners>Microsoft.Extensions.DependencyModel</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for reading `.deps` files.</description>\r\n    <tags></tags>\r\n    <serviceable>true</serviceable>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5.1\">\r\n
        \       <dependency id=\"Microsoft.DotNet.InternalAbstractions\" version=\"[1.0.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n      <group targetFramework=\".NETStandard1.6\">\r\n
        \       <dependency id=\"System.Diagnostics.Debug\" version=\"[4.0.11, )\"
        />\r\n        <dependency id=\"System.Dynamic.Runtime\" version=\"[4.0.11,
        )\" />\r\n        <dependency id=\"System.Linq\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"Microsoft.DotNet.InternalAbstractions\" version=\"[1.0.0,
        )\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"[9.0.1, )\"
        />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 22 Aug 2023 00:16:37 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.internalabstractions/1.0.0/microsoft.dotnet.internalabstractions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:37 GMT
      content-type:
      - text/xml
      content-length:
      - '1350'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Fri, 05 Oct 2018 06:46:31 GMT
      etag:
      - '0x8D62A8E48EBB401'
      x-ms-request-id:
      - 616bc67f-a01e-001b-538d-d483f4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001637Z-1kuytze0v16ptb2ch1y7x7pr2w00000007tg000000014e7x
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Microsoft.DotNet.InternalAbstractions</id>\r\n    <version>1.0.0</version>\r\n
        \   <authors>Microsoft.DotNet.InternalAbstractions</authors>\r\n    <owners>Microsoft.DotNet.InternalAbstractions</owners>\r\n
        \   <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Abstractions
        for making code that uses file system and environment testable.</description>\r\n
        \   <tags></tags>\r\n    <serviceable>true</serviceable>\r\n    <dependencies>\r\n
        \     <group targetFramework=\".NETFramework4.5.1\" />\r\n      <group targetFramework=\".NETStandard1.3\">\r\n
        \       <dependency id=\"System.AppContext\" version=\"[4.1.0, )\" />\r\n
        \       <dependency id=\"System.Collections\" version=\"[4.0.11, )\" />\r\n
        \       <dependency id=\"System.IO\" version=\"[4.1.0, )\" />\r\n        <dependency
        id=\"System.IO.FileSystem\" version=\"[4.0.1, )\" />\r\n        <dependency
        id=\"System.Reflection.TypeExtensions\" version=\"[4.1.0, )\" />\r\n        <dependency
        id=\"System.Runtime.Extensions\" version=\"[4.1.0, )\" />\r\n        <dependency
        id=\"System.Runtime.InteropServices\" version=\"[4.1.0, )\" />\r\n        <dependency
        id=\"System.Runtime.InteropServices.RuntimeInformation\" version=\"[4.0.0,
        )\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 22 Aug 2023 00:16:37 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.loader/4.0.0/system.runtime.loader.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:38 GMT
      content-type:
      - text/xml
      content-length:
      - '1738'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:59:38 GMT
      etag:
      - '0x8D6614EA8E638EF'
      x-ms-request-id:
      - 143fda47-901e-005d-408d-d4b773000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001637Z-861g4pgz4573b96p9h9xdxpsd800000003bg00000000m76p
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLkxvYWRlcjwvaWQ+DQogICAgPHZlcnNpb24+NC4wLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5SdW50aW1lLkxvYWRlcjwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgdGhlIFN5c3RlbS5SdW50aW1lLkxvYWRlci5Bc3NlbWJseUxvYWRDb250ZXh0IGNsYXNzLCB3aGljaCBwcm92aWRlcyBtZW1iZXJzIGZvciBsb2FkaW5nIGFzc2VtYmxpZXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uUnVudGltZS5Mb2FkZXIuQXNzZW1ibHlMb2FkQ29udGV4dA0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDE3PC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjUiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 00:16:37 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/fakeiteasy/7.4.0/fakeiteasy.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 00:16:38 GMT
      content-type:
      - text/xml
      content-length:
      - '1880'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Sun, 23 Apr 2023 13:21:28 GMT
      etag:
      - '0x8DB43FDA5918B2D'
      x-ms-request-id:
      - be4d74d1-a01e-0034-308d-d48e3f000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T001638Z-mq1r9nwmg15qp49nf9afzrca60000000082000000001dwak
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGE+DQogICAgPGlkPkZha2VJdEVhc3k8L2lkPg0KICAgIDx2ZXJzaW9uPjcuNC4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5GYWtlSXRFYXN5IC0gTW9ja2luZyBtYWRlIGZha2luZyBlYXN5ITwvdGl0bGU+DQogICAgPGF1dGhvcnM+UGF0cmlrIEjDpGduZSwgRmFrZUl0RWFzeSBjb250cmlidXRvcnM8L2F1dGhvcnM+DQogICAgPGxpY2Vuc2UgdHlwZT0iZXhwcmVzc2lvbiI+TUlUPC9saWNlbnNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHBzOi8vbGljZW5zZXMubnVnZXQub3JnL01JVDwvbGljZW5zZVVybD4NCiAgICA8aWNvbj5pbWFnZXMvRmFrZUl0RWFzeS5wbmc8L2ljb24+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9mYWtlaXRlYXN5LmdpdGh1Yi5pby88L3Byb2plY3RVcmw+DQogICAgPGRlc2NyaXB0aW9uPkl0J3MgZmFraW5nIGFtYXppbmchIFRoZSBlYXN5IG1vY2tpbmcgbGlicmFyeSBmb3IgLk5FVCB0aGF0IHdvcmtzIGdyZWF0IGluIEMjIGFuZCBWQi5ORVQgYWxpa2UuIE5vIG5lZWQgdG8ga25vdyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGEgc3R1YiwgYSBtb2NrIG9yIGEgc3B5LCBldmVyeXRoaW5nJ3MgYSBmYWtlISBUaGUgZWFzeSB0byB1c2UsIHJlZmFjdG9yaW5nIGZyaWVuZGx5IEFQSSBtYWtlcyBmYWtpbmcgYSBicmVlemUuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ2l0aHViLmNvbS9GYWtlSXRFYXN5L0Zha2VJdEVhc3kvcmVsZWFzZXM8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PkNvcHlyaWdodCAoYykgRmFrZUl0RWFzeSBjb250cmlidXRvcnMuIChmYWtlaXRlYXN5ZnhAZ21haWwuY29tKTwvY29weXJpZ2h0Pg0KICAgIDx0YWdzPlRERCB1bml0dGVzdGluZyBtb2NrcyBtb2NraW5nIGZha2VzIGZha2luZyBzdHVicyBzdHViYmluZyBzcHkgc3BpZXMgZG91YmxlcyBpc29sYXRpb24gc3Vic3RpdHV0ZXMgc3Vic3RpdHV0aW9uPC90YWdzPg0KICAgIDxyZXBvc2l0b3J5IHR5cGU9ImdpdCIgdXJsPSJodHRwczovL2dpdGh1Yi5jb20vRmFrZUl0RWFzeS9GYWtlSXRFYXN5LmdpdCIgY29tbWl0PSJkZWQ2MTVmZjQzMWM1N2VmZmZjOTc2NzI0NDY4MjZmNGI0OTIwM2E0IiAvPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IkNhc3RsZS5Db3JlIiB2ZXJzaW9uPSI0LjMuMSIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Im5ldDUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJDYXN0bGUuQ29yZSIgdmVyc2lvbj0iNC4zLjEiIGV4Y2x1ZGU9IkJ1aWxkLEFuYWx5emVycyIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQyLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iQ2FzdGxlLkNvcmUiIHZlcnNpb249IjQuMy4xIiBleGNsdWRlPSJCdWlsZCxBbmFseXplcnMiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMi4xIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IkNhc3RsZS5Db3JlIiB2ZXJzaW9uPSI0LjMuMSIgZXhjbHVkZT0iQnVpbGQsQW5hbHl6ZXJzIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 00:16:38 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/netstandard.library/1.6.1/netstandard.library.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:43 GMT
      content-type:
      - text/xml
      content-length:
      - '10337'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Tue, 18 Dec 2018 01:03:01 GMT
      etag:
      - '0x8D664848F1F015E'
      x-ms-request-id:
      - 41356ff6-d01e-005c-6e1f-d5e8af000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174142Z-861g4pgz4573b96p9h9xdxpsd800000004e00000000067v9
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 22 Aug 2023 17:41:43 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.netcore.platforms/1.1.0/microsoft.netcore.platforms.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:43 GMT
      content-type:
      - text/xml
      content-length:
      - '1067'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Tue, 18 Dec 2018 00:14:24 GMT
      etag:
      - '0x8D6647DC44B2181'
      x-ms-request-id:
      - 45473d6f-001e-005f-071f-d509cb000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174143Z-3fap7etuuh5ub1vvx0gtr24p1w00000004k000000000gaz1
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzAxL251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPk1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtczwvaWQ+DQogICAgPHZlcnNpb24+MS4xLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPk1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgcnVudGltZSBpbmZvcm1hdGlvbiByZXF1aXJlZCB0byByZXNvbHZlIHRhcmdldCBmcmFtZXdvcmssIHBsYXRmb3JtLCBhbmQgcnVudGltZSBzcGVjaWZpYyBpbXBsZW1lbnRhdGlvbnMgb2YgLk5FVENvcmUgcGFja2FnZXMuIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:43 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.collections/4.3.0/system.collections.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:43 GMT
      content-type:
      - text/xml
      content-length:
      - '3231'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:29 GMT
      etag:
      - '0x8D66147A7662633'
      x-ms-request-id:
      - da96ffae-401e-003c-2a1f-d59430000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174143Z-1kuytze0v16ptb2ch1y7x7pr2w00000008tg0000000256yg
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db2xsZWN0aW9uczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5Db2xsZWN0aW9uczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyB0aGF0IGRlZmluZSBnZW5lcmljIGNvbGxlY3Rpb25zLCB3aGljaCBhbGxvdyBkZXZlbG9wZXJzIHRvIGNyZWF0ZSBzdHJvbmdseSB0eXBlZCBjb2xsZWN0aW9ucyB0aGF0IHByb3ZpZGUgYmV0dGVyIHR5cGUgc2FmZXR5IGFuZCBwZXJmb3JtYW5jZSB0aGFuIG5vbi1nZW5lcmljIHN0cm9uZ2x5IHR5cGVkIGNvbGxlY3Rpb25zLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdCZsdDtUJmd0Ow0KU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeSZsdDtUS2V5LCBUVmFsdWUmZ3Q7DQpTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5RdWV1ZSZsdDtUJmd0Ow0KU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuU3RhY2smbHQ7VCZndDsNClN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkhhc2hTZXQmbHQ7VCZndDsNClN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpbmtlZExpc3QmbHQ7VCZndDsNClN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkVxdWFsaXR5Q29tcGFyZXImbHQ7VCZndDsNClN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkNvbXBhcmVyJmx0O1QmZ3Q7DQpTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5Tb3J0ZWREaWN0aW9uYXJ5Jmx0O1RLZXksIFRWYWx1ZSZndDsNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:43 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.netcore.targets/1.1.0/microsoft.netcore.targets.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:43 GMT
      content-type:
      - text/xml
      content-length:
      - '1148'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 23:00:45 GMT
      etag:
      - '0x8D6614ED0828292'
      x-ms-request-id:
      - da970012-401e-003c-0a1f-d59430000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174143Z-3fap7etuuh5ub1vvx0gtr24p1w00000004pg000000006p8c
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzAxL251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPk1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHM8L2lkPg0KICAgIDx2ZXJzaW9uPjEuMS4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5NaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBzdXBwb3J0aW5nIGluZnJhc3RydWN0dXJlIGZvciBwb3J0YWJsZSBwcm9qZWN0czogc3VwcG9ydCBpZGVudGlmaWVycyB0aGF0IGRlZmluZSBmcmFtZXdvcmsgYW5kIHJ1bnRpbWUgZm9yIHN1cHBvcnQgdGFyZ2V0cyBhbmQgcGFja2FnZXMgdGhhdCByZWZlcmVuY2UgdGhlIG1pbmltdW0gc3VwcG9ydGVkIHBhY2thZ2UgdmVyc2lvbnMgd2hlbiB0YXJnZXRpbmcgdGhlc2UuIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:43 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime/4.3.0/system.runtime.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:44 GMT
      content-type:
      - text/xml
      content-length:
      - '3981'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:39 GMT
      etag:
      - '0x8D66147D0E8B8D5'
      x-ms-request-id:
      - 627962ce-501e-0030-661f-d50338000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174143Z-5dxk1snkc508baey39gwkvm720000000012000000001gnm4
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJ1bnRpbWU8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBmdW5kYW1lbnRhbCBwcmltaXRpdmVzLCBjbGFzc2VzIGFuZCBiYXNlIGNsYXNzZXMgdGhhdCBkZWZpbmUgY29tbW9ubHktdXNlZCB2YWx1ZSBhbmQgcmVmZXJlbmNlIGRhdGEgdHlwZXMsIGV2ZW50cyBhbmQgZXZlbnQgaGFuZGxlcnMsIGludGVyZmFjZXMsIGF0dHJpYnV0ZXMsIGFuZCBleGNlcHRpb25zLiBUaGlzIHBhY2thZ2VzIHJlcHJlc2VudHMgdGhlIGNvcmUgcGFja2FnZSwgYW5kIHByb3ZpZGVzIHRoZSBtaW5pbWFsIHNldCBvZiB0eXBlcyByZXF1aXJlZCB0byBidWlsZCBhIG1hbmFnZWQgYXBwbGljYXRpb24uDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uT2JqZWN0DQpTeXN0ZW0uRXhjZXB0aW9uDQpTeXN0ZW0uSW50MTYNClN5c3RlbS5JbnQzMg0KU3lzdGVtLkludDY0DQpTeXN0ZW0uRW51bQ0KU3lzdGVtLlN0cmluZw0KU3lzdGVtLkNoYXINClN5c3RlbS5Cb29sZWFuDQpTeXN0ZW0uU0J5dGUNClN5c3RlbS5CeXRlDQpTeXN0ZW0uRGF0ZVRpbWUNClN5c3RlbS5EYXRlVGltZU9mZnNldA0KU3lzdGVtLlNpbmdsZQ0KU3lzdGVtLkRvdWJsZQ0KU3lzdGVtLlVJbnQxNg0KU3lzdGVtLlVJbnQzMg0KU3lzdGVtLlVJbnQ2NA0KU3lzdGVtLklEaXNwb3NhYmxlDQpTeXN0ZW0uVXJpDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjIiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvbXBvbmVudE1vZGVsLkNvbXBvc2l0aW9uIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29tcG9uZW50TW9kZWwuQ29tcG9zaXRpb24iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:43 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.diagnostics.debug/4.3.0/system.diagnostics.debug.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:44 GMT
      content-type:
      - text/xml
      content-length:
      - '2962'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:30 GMT
      etag:
      - '0x8D66147A7C71C8B'
      x-ms-request-id:
      - a09ea5a1-601e-0049-4a1f-d5ff1c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174144Z-5dxk1snkc508baey39gwkvm720000000012g00000001c1hv
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZzwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZzwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyBhbmQgYXR0cmlidXRlcyB0aGF0IGFsbG93cyBiYXNpYyBpbnRlcmFjdGlvbiB3aXRoIGEgZGVidWdnZXIuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWcNClN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1Z2dlclN0ZXBUaHJvdWdoQXR0cmlidXRlDQpTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWdnZXINClN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1Z2dlckRpc3BsYXlBdHRyaWJ1dGUNClN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1Z2dlckJyb3dzYWJsZUF0dHJpYnV0ZQ0KU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnZ2VyQnJvd3NhYmxlU3RhdGUNClN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQ0KU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUNClN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1Z2dlclR5cGVQcm94eUF0dHJpYnV0ZQ0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:44 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.diagnostics.tools/4.3.0/system.diagnostics.tools.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:44 GMT
      content-type:
      - text/xml
      content-length:
      - '2470'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:19 GMT
      etag:
      - '0x8D661477D2C036C'
      x-ms-request-id:
      - d015094b-601e-0076-041f-d537bf000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174144Z-5dxk1snkc508baey39gwkvm720000000012000000001gnq4
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5EaWFnbm9zdGljcy5Ub29sczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5EaWFnbm9zdGljcy5Ub29sczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgYXR0cmlidXRlcywgc3VjaCBhcyBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlIGFuZCBTdXBwcmVzTWVzc2FnZUF0dHJpYnV0ZSwgdGhhdCBhcmUgZW1pdHRlZCBvciBjb25zdW1lZCBieSBhbmFseXNpcyB0b29scy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyLkdlbmVyYXRlZENvZGVBdHRyaWJ1dGUNClN5c3RlbS5EaWFnbm9zdGljcy5Db2RlQW5hbHlzaXMuU3VwcHJlc3NNZXNzYWdlQXR0cmlidXRlDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:44 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.globalization/4.3.0/system.globalization.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:44 GMT
      content-type:
      - text/xml
      content-length:
      - '2869'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:19 GMT
      etag:
      - '0x8D661477D81FB3C'
      x-ms-request-id:
      - 2298baa7-c01e-0040-611f-d5bacf000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174144Z-3fap7etuuh5ub1vvx0gtr24p1w00000004n000000000bkss
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5HbG9iYWxpemF0aW9uPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkdsb2JhbGl6YXRpb248L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgdGhhdCBkZWZpbmUgY3VsdHVyZS1yZWxhdGVkIGluZm9ybWF0aW9uLCBpbmNsdWRpbmcgbGFuZ3VhZ2UsIGNvdW50cnkvcmVnaW9uLCBjYWxlbmRhcnMgaW4gdXNlLCBmb3JtYXQgcGF0dGVybnMgZm9yIGRhdGVzLCBjdXJyZW5jeSwgYW5kIG51bWJlcnMsIGFuZCBzb3J0IG9yZGVyIGZvciBzdHJpbmdzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkdsb2JhbGl6YXRpb24uRGF0ZVRpbWVGb3JtYXRJbmZvDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5DdWx0dXJlSW5mbw0KU3lzdGVtLkdsb2JhbGl6YXRpb24uTnVtYmVyRm9ybWF0SW5mbw0KU3lzdGVtLkdsb2JhbGl6YXRpb24uQ2FsZW5kYXJXZWVrUnVsZQ0KU3lzdGVtLkdsb2JhbGl6YXRpb24uVGV4dEluZm8NClN5c3RlbS5HbG9iYWxpemF0aW9uLkNhbGVuZGFyDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5Db21wYXJlSW5mbw0KU3lzdGVtLkdsb2JhbGl6YXRpb24uQ29tcGFyZU9wdGlvbnMNClN5c3RlbS5HbG9iYWxpemF0aW9uLlVuaWNvZGVDYXRlZ29yeQ0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:44 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.io/4.3.0/system.io.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:44 GMT
      content-type:
      - text/xml
      content-length:
      - '3871'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D08C358C'
      x-ms-request-id:
      - 5a5c0928-101e-0031-501f-d55ce4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174144Z-3fap7etuuh5ub1vvx0gtr24p1w00000004m000000000e7hb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5JTzwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5JTzwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgYmFzZSBpbnB1dCBhbmQgb3V0cHV0IChJL08pIHR5cGVzLCBpbmNsdWRpbmcgU3lzdGVtLklPLlN0cmVhbSwgU3lzdGVtLklPLlN0cmVhbVJlYWRlciBhbmQgU3lzdGVtLklPLlN0cmVhbVdyaXRlciwgdGhhdCBhbGxvdyByZWFkaW5nIGFuZCB3cml0aW5nIHRvIGRhdGEgc3RyZWFtcw0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLklPLlN0cmVhbQ0KU3lzdGVtLklPLkVuZE9mU3RyZWFtRXhjZXB0aW9uDQpTeXN0ZW0uSU8uTWVtb3J5U3RyZWFtDQpTeXN0ZW0uSU8uU3RyZWFtUmVhZGVyDQpTeXN0ZW0uSU8uU3RyZWFtV3JpdGVyDQpTeXN0ZW0uSU8uU3RyaW5nV3JpdGVyDQpTeXN0ZW0uSU8uVGV4dFdyaXRlcg0KU3lzdGVtLklPLlRleHRSZWFkZXINCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:44 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.text.encoding/4.3.0/system.text.encoding.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:45 GMT
      content-type:
      - text/xml
      content-length:
      - '2766'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:28 GMT
      etag:
      - '0x8D66147A6D8CE7B'
      x-ms-request-id:
      - d0150acc-601e-0076-621f-d537bf000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174145Z-k89pmaugft4pvcmkx160mg3kcs000000026g000000002c26
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UZXh0LkVuY29kaW5nPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlRleHQuRW5jb2Rpbmc8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGJhc2UgYWJzdHJhY3QgZW5jb2RpbmcgY2xhc3NlcyBmb3IgY29udmVydGluZyBibG9ja3Mgb2YgY2hhcmFjdGVycyB0byBhbmQgZnJvbSBibG9ja3Mgb2YgYnl0ZXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uVGV4dC5FbmNvZGluZw0KU3lzdGVtLlRleHQuRGVjb2RlckZhbGxiYWNrRXhjZXB0aW9uDQpTeXN0ZW0uVGV4dC5EZWNvZGVyDQpTeXN0ZW0uVGV4dC5FbmNvZGVyRmFsbGJhY2tFeGNlcHRpb24NClN5c3RlbS5UZXh0LkVuY29kZXINClN5c3RlbS5UZXh0LkVuY29kZXJGYWxsYmFjaw0KU3lzdGVtLlRleHQuRW5jb2RlckZhbGxiYWNrQnVmZmVyDQpTeXN0ZW0uVGV4dC5EZWNvZGVyRmFsbGJhY2sNClN5c3RlbS5UZXh0LkRlY29kZXJGYWxsYmFja0J1ZmZlcg0KU3lzdGVtLlRleHQuRGVjb2RlckV4Y2VwdGlvbkZhbGxiYWNrDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:45 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.threading.tasks/4.3.0/system.threading.tasks.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:45 GMT
      content-type:
      - text/xml
      content-length:
      - '2843'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BB0B44DF'
      x-ms-request-id:
      - 3666c04e-101e-0043-511f-d55bab000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174145Z-v97597zv4p3uve5suv0fuhn1f000000008k0000000007sax
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UaHJlYWRpbmcuVGFza3M8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uVGhyZWFkaW5nLlRhc2tzPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyB0eXBlcyB0aGF0IHNpbXBsaWZ5IHRoZSB3b3JrIG9mIHdyaXRpbmcgY29uY3VycmVudCBhbmQgYXN5bmNocm9ub3VzIGNvZGUuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzLlRhc2smbHQ7VFJlc3VsdCZndDsNClN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMuVGFza0F3YWl0ZXImbHQ7VFJlc3VsdCZndDsNClN5c3RlbS5UaHJlYWRpbmcuVGFza3MuVGFza0NvbXBsZXRpb25Tb3VyY2UmbHQ7VFJlc3VsdCZndDsNClN5c3RlbS5UaHJlYWRpbmcuVGFza3MuVGFzaw0KU3lzdGVtLk9wZXJhdGlvbkNhbmNlbGVkRXhjZXB0aW9uDQpTeXN0ZW0uQWdncmVnYXRlRXhjZXB0aW9uDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29yZSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:45 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.linq/4.3.0/system.linq.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:45 GMT
      content-type:
      - text/xml
      content-length:
      - '3325'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D01D0028'
      x-ms-request-id:
      - a9c784a8-601e-0066-691f-d5f2d7000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174145Z-861g4pgz4573b96p9h9xdxpsd800000004a000000001v8x3
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5MaW5xPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkxpbnE8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgYW5kIGludGVyZmFjZXMgdGhhdCBzdXBwb3J0cyBxdWVyaWVzIHRoYXQgdXNlIExhbmd1YWdlLUludGVncmF0ZWQgUXVlcnkgKExJTlEpLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkxpbnEuRW51bWVyYWJsZQ0KU3lzdGVtLkxpbnEuSUdyb3VwaW5nJmx0O1RLZXksIFRFbGVtZW50Jmd0Ow0KU3lzdGVtLkxpbnEuSU9yZGVyZWRFbnVtZXJhYmxlJmx0O1RFbGVtZW50Jmd0Ow0KU3lzdGVtLkxpbnEuSUxvb2t1cCZsdDtUS2V5LCBURWxlbWVudCZndDsNClN5c3RlbS5MaW5xLkxvb2t1cCZsdDtUS2V5LCBURWxlbWVudCZndDsNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS42Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29yZSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjMiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:45 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.linq.expressions/4.3.0/system.linq.expressions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:45 GMT
      content-type:
      - text/xml
      content-length:
      - '5486'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC5A10AA'
      x-ms-request-id:
      - '06833296-c01e-0050-491f-d57fa7000000'
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174145Z-q9ssc0pwrh6hp3anum0kgmh6ug00000002ug0000000297rv
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5MaW5xLkV4cHJlc3Npb25zPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkxpbnEuRXhwcmVzc2lvbnM8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMsIGludGVyZmFjZXMgYW5kIGVudW1lcmF0aW9ucyB0aGF0IGVuYWJsZSBsYW5ndWFnZS1sZXZlbCBjb2RlIGV4cHJlc3Npb25zIHRvIGJlIHJlcHJlc2VudGVkIGFzIG9iamVjdHMgaW4gdGhlIGZvcm0gb2YgZXhwcmVzc2lvbiB0cmVlcy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5MaW5xLklRdWVyeWFibGUmbHQ7VCZndDsNClN5c3RlbS5MaW5xLklRdWVyeWFibGUNClN5c3RlbS5MaW5xLkV4cHJlc3Npb25zLkV4cHJlc3Npb24mbHQ7VERlbGVnYXRlJmd0Ow0KU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMuRXhwcmVzc2lvbg0KU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMuRXhwcmVzc2lvblZpc2l0b3INCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuSUxHZW5lcmF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuTGlnaHR3ZWlnaHQiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlR5cGVFeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuNiI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uTGlucSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uT2JqZWN0TW9kZWwiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uRW1pdCIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LklMR2VuZXJhdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkxpZ2h0d2VpZ2h0IiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5UeXBlRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjMiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29yZSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:45 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection/4.3.0/system.reflection.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:46 GMT
      content-type:
      - text/xml
      content-length:
      - '3880'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:37 GMT
      etag:
      - '0x8D66147CFD735BD'
      x-ms-request-id:
      - 867b824e-701e-006a-7e1f-d565df000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174146Z-5dxk1snkc508baey39gwkvm720000000012g00000001c1zt
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJlZmxlY3Rpb248L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHR5cGVzIHRoYXQgcmV0cmlldmUgaW5mb3JtYXRpb24gYWJvdXQgYXNzZW1ibGllcywgbW9kdWxlcywgbWVtYmVycywgcGFyYW1ldGVycywgYW5kIG90aGVyIGVudGl0aWVzIGluIG1hbmFnZWQgY29kZSBieSBleGFtaW5pbmcgdGhlaXIgbWV0YWRhdGEuIFRoZXNlIHR5cGVzIGFsc28gY2FuIGJlIHVzZWQgdG8gbWFuaXB1bGF0ZSBpbnN0YW5jZXMgb2YgbG9hZGVkIHR5cGVzLCBmb3IgZXhhbXBsZSB0byBob29rIHVwIGV2ZW50cyBvciB0byBpbnZva2UgbWV0aG9kcy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5SZWZsZWN0aW9uLk1ldGhvZEluZm8NClN5c3RlbS5SZWZsZWN0aW9uLlByb3BlcnR5SW5mbw0KU3lzdGVtLlJlZmxlY3Rpb24uUGFyYW1ldGVySW5mbw0KU3lzdGVtLlJlZmxlY3Rpb24uRmllbGRJbmZvDQpTeXN0ZW0uUmVmbGVjdGlvbi5Db25zdHJ1Y3RvckluZm8NClN5c3RlbS5SZWZsZWN0aW9uLkFzc2VtYmx5DQpTeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvDQpTeXN0ZW0uUmVmbGVjdGlvbi5FdmVudEluZm8NClN5c3RlbS5SZWZsZWN0aW9uLk1vZHVsZQ0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjUiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:46 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection.primitives/4.3.0/system.reflection.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:46 GMT
      content-type:
      - text/xml
      content-length:
      - '2535'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:12:57 GMT
      etag:
      - '0x8D6614823229D6B'
      x-ms-request-id:
      - 51c0492e-801e-0041-331f-d5e513000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174146Z-4ybkudyqdh64hahhtn07xgbcrc000000093000000000rypa
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjb21tb24gZW51bWVyYXRpb25zIGZvciByZWZsZWN0aW9uLWJhc2VkIGxpYnJhcmllcy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5SZWZsZWN0aW9uLkZpZWxkQXR0cmlidXRlcw0KU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5PcENvZGUNClN5c3RlbS5SZWZsZWN0aW9uLlR5cGVBdHRyaWJ1dGVzDQpTeXN0ZW0uUmVmbGVjdGlvbi5NZXRob2RBdHRyaWJ1dGVzDQpTeXN0ZW0uUmVmbGVjdGlvbi5DYWxsaW5nQ29udmVudGlvbnMNClN5c3RlbS5SZWZsZWN0aW9uLlByb3BlcnR5QXR0cmlidXRlcw0KU3lzdGVtLlJlZmxlY3Rpb24uRXZlbnRBdHRyaWJ1dGVzDQpTeXN0ZW0uUmVmbGVjdGlvbi5QYXJhbWV0ZXJBdHRyaWJ1dGVzDQpTeXN0ZW0uUmVmbGVjdGlvbi5HZW5lcmljUGFyYW1ldGVyQXR0cmlidXRlcw0KU3lzdGVtLlJlZmxlY3Rpb24uTWV0aG9kSW1wbEF0dHJpYnV0ZXMNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:46 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.net.primitives/4.3.0/system.net.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:46 GMT
      content-type:
      - text/xml
      content-length:
      - '3312'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:11:12 GMT
      etag:
      - '0x8D66147E4ADB036'
      x-ms-request-id:
      - 23585065-e01e-000a-641f-d51940000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174146Z-3fap7etuuh5ub1vvx0gtr24p1w00000004n000000000bm08
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5OZXQuUHJpbWl0aXZlczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5OZXQuUHJpbWl0aXZlczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY29tbW9uIHR5cGVzIGZvciBuZXR3b3JrLWJhc2VkIGxpYnJhcmllcywgaW5jbHVkaW5nIFN5c3RlbS5OZXQuSVBBZGRyZXNzLCBTeXN0ZW0uTmV0LklQRW5kUG9pbnQsIGFuZCBTeXN0ZW0uTmV0LkNvb2tpZUNvbnRhaW5lci4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5OZXQuSHR0cFN0YXR1c0NvZGUNClN5c3RlbS5OZXQuU29ja2V0cy5Tb2NrZXRFcnJvcg0KU3lzdGVtLk5ldC5Db29raWUNClN5c3RlbS5OZXQuU29ja2V0cy5Tb2NrZXRFeGNlcHRpb24NClN5c3RlbS5OZXQuSVBFbmRQb2ludA0KU3lzdGVtLk5ldC5JQ3JlZGVudGlhbHMNClN5c3RlbS5OZXQuTmV0d29ya0NyZWRlbnRpYWwNClN5c3RlbS5OZXQuSVBBZGRyZXNzDQpTeXN0ZW0uTmV0LkNvb2tpZUNvbGxlY3Rpb24NClN5c3RlbS5OZXQuQ29va2llQ29udGFpbmVyDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkhhbmRsZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:46 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.handles/4.3.0/system.runtime.handles.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:46 GMT
      content-type:
      - text/xml
      content-length:
      - '2140'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC5A2C2D'
      x-ms-request-id:
      - d4281d73-801e-006e-481f-d5e8d8000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174146Z-1kuytze0v16ptb2ch1y7x7pr2w00000008vg00000001fndq
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLkhhbmRsZXM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUnVudGltZS5IYW5kbGVzPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBiYXNlIGNsYXNzZXMsIGluY2x1ZGluZyBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ3JpdGljYWxIYW5kbGUgYW5kIFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5TYWZlSGFuZGxlLCBmb3IgdHlwZXMgdGhhdCByZXByZXNlbnQgb3BlcmF0aW5nIHN5c3RlbSBoYW5kbGVzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLlNhZmVIYW5kbGUNCk1pY3Jvc29mdC5XaW4zMi5TYWZlSGFuZGxlcy5TYWZlV2FpdEhhbmRsZQ0KU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNyaXRpY2FsSGFuZGxlDQpTeXN0ZW0uVGhyZWFkaW5nLldhaXRIYW5kbGVFeHRlbnNpb25zDQpTeXN0ZW0uSU8uSGFuZGxlSW5oZXJpdGFiaWxpdHkNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:46 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.objectmodel/4.3.0/system.objectmodel.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:47 GMT
      content-type:
      - text/xml
      content-length:
      - '3459'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:12:56 GMT
      etag:
      - '0x8D6614822776BF4'
      x-ms-request-id:
      - 3fa809ca-401e-004e-3a1f-d5937f000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174147Z-3fap7etuuh5ub1vvx0gtr24p1w00000004m000000000e7x9
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5PYmplY3RNb2RlbDwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5PYmplY3RNb2RlbDwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgdHlwZXMgYW5kIGludGVyZmFjZXMgdGhhdCBhbGxvdyB0aGUgY3JlYXRpb24gb2Ygb2JzZXJ2YWJsZSB0eXBlcyB0aGF0IHByb3ZpZGUgbm90aWZpY2F0aW9ucyB0byBjbGllbnRzIHdoZW4gY2hhbmdlcyBhcmUgbWFkZSB0byBpdC4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5Db21wb25lbnRNb2RlbC5JTm90aWZ5UHJvcGVydHlDaGFuZ2VkDQpTeXN0ZW0uQ29sbGVjdGlvbnMuT2JqZWN0TW9kZWwuT2JzZXJ2YWJsZUNvbGxlY3Rpb24mbHQ7VCZndDsNClN5c3RlbS5Db21wb25lbnRNb2RlbC5Qcm9wZXJ0eUNoYW5nZWRFdmVudEhhbmRsZXINClN5c3RlbS5XaW5kb3dzLklucHV0LklDb21tYW5kDQpTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQuSU5vdGlmeUNvbGxlY3Rpb25DaGFuZ2VkDQpTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQuTm90aWZ5Q29sbGVjdGlvbkNoYW5nZWRFdmVudEFyZ3MNClN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZC5Ob3RpZnlDb2xsZWN0aW9uQ2hhbmdlZEV2ZW50SGFuZGxlcg0KU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1vZGVsLktleWVkQ29sbGVjdGlvbiZsdDtUS2V5LCBUSXRlbSZndDsNClN5c3RlbS5Db21wb25lbnRNb2RlbC5Qcm9wZXJ0eUNoYW5nZWRFdmVudEFyZ3MNClN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbC5SZWFkT25seURpY3Rpb25hcnkmbHQ7VEtleSwgVFZhbHVlJmd0Ow0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:47 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection.extensions/4.3.0/system.reflection.extensions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:47 GMT
      content-type:
      - text/xml
      content-length:
      - '2429'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:04 GMT
      etag:
      - '0x8D66147BBE1600D'
      x-ms-request-id:
      - 84659eb5-f01e-0039-0c1f-d546eb000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174147Z-hgu4uvpkux28depfzw51wdeh4800000008zg000000005fhh
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uLkV4dGVuc2lvbnM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUmVmbGVjdGlvbi5FeHRlbnNpb25zPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjdXN0b20gYXR0cmlidXRlIGV4dGVuc2lvbiBtZXRob2RzIGZvciBTeXN0ZW0uUmVmbGVjdGlvbiB0eXBlcy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5SZWZsZWN0aW9uLkludGVyZmFjZU1hcHBpbmcNClN5c3RlbS5SZWZsZWN0aW9uLkN1c3RvbUF0dHJpYnV0ZUV4dGVuc2lvbnMNClN5c3RlbS5SZWZsZWN0aW9uLlJ1bnRpbWVSZWZsZWN0aW9uRXh0ZW5zaW9ucw0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:47 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.resources.resourcemanager/4.3.0/system.resources.resourcemanager.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:47 GMT
      content-type:
      - text/xml
      content-length:
      - '2699'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D03B3CF2'
      x-ms-request-id:
      - d0151083-601e-0076-461f-d537bf000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174147Z-3fap7etuuh5ub1vvx0gtr24p1w00000004hg00000000h7qn
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXI8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgYW5kIGF0dHJpYnV0ZXMgdGhhdCBhbGxvdyBkZXZlbG9wZXJzIHRvIGNyZWF0ZSwgc3RvcmUsIGFuZCBtYW5hZ2UgdmFyaW91cyBjdWx0dXJlLXNwZWNpZmljIHJlc291cmNlcyB1c2VkIGluIGFuIGFwcGxpY2F0aW9uLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXINClN5c3RlbS5SZXNvdXJjZXMuTmV1dHJhbFJlc291cmNlc0xhbmd1YWdlQXR0cmlidXRlDQpTeXN0ZW0uUmVzb3VyY2VzLlNhdGVsbGl0ZUNvbnRyYWN0VmVyc2lvbkF0dHJpYnV0ZQ0KU3lzdGVtLlJlc291cmNlcy5NaXNzaW5nTWFuaWZlc3RSZXNvdXJjZUV4Y2VwdGlvbg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uR2xvYmFsaXphdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:47 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.extensions/4.3.0/system.runtime.extensions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:47 GMT
      content-type:
      - text/xml
      content-length:
      - '3347'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:04 GMT
      etag:
      - '0x8D66147BC35FAA6'
      x-ms-request-id:
      - 045f97c8-401e-0061-701f-d59eb4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174147Z-hgu4uvpkux28depfzw51wdeh480000000920000000000n8y
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjb21tb25seS11c2VkIGNsYXNzZXMgZm9yIHBlcmZvcm1pbmcgbWF0aGVtYXRpY2FsIGZ1bmN0aW9ucywgY29udmVyc2lvbnMsIHN0cmluZyBjb21wYXJpc29ucyBhbmQgcXVlcnlpbmcgZW52aXJvbm1lbnQgaW5mb3JtYXRpb24uDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uTWF0aA0KU3lzdGVtLkVudmlyb25tZW50DQpTeXN0ZW0uUmFuZG9tDQpTeXN0ZW0uUHJvZ3Jlc3MmbHQ7VCZndDsNClN5c3RlbS5Db252ZXJ0DQpTeXN0ZW0uRGlhZ25vc3RpY3MuU3RvcHdhdGNoDQpTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nLkZyYW1ld29ya05hbWUNClN5c3RlbS5TdHJpbmdDb21wYXJlcg0KU3lzdGVtLklPLlBhdGgNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:47 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.text.encoding.extensions/4.3.0/system.text.encoding.extensions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:48 GMT
      content-type:
      - text/xml
      content-length:
      - '2802'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:11:13 GMT
      etag:
      - '0x8D66147E550545A'
      x-ms-request-id:
      - fbd2a926-e01e-0047-351f-d5d6ac000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174147Z-3fap7etuuh5ub1vvx0gtr24p1w00000004hg00000000h7u1
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UZXh0LkVuY29kaW5nLkV4dGVuc2lvbnM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uVGV4dC5FbmNvZGluZy5FeHRlbnNpb25zPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBzdXBwb3J0IGZvciBzcGVjaWZpYyBlbmNvZGluZ3MsIGluY2x1ZGluZyBBU0NJSSwgVVRGLTcsIFVURi04LCBVVEYtMTYsIGFuZCBVVEYtMzIuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uVGV4dC5VVEY4RW5jb2RpbmcNClN5c3RlbS5UZXh0LlVuaWNvZGVFbmNvZGluZw0KU3lzdGVtLlRleHQuQVNDSUlFbmNvZGluZw0KU3lzdGVtLlRleHQuVVRGN0VuY29kaW5nDQpTeXN0ZW0uVGV4dC5VVEYzMkVuY29kaW5nDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:48 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.text.regularexpressions/4.3.0/system.text.regularexpressions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:48 GMT
      content-type:
      - text/xml
      content-length:
      - '3780'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:06 GMT
      etag:
      - '0x8D66147BD070BA6'
      x-ms-request-id:
      - da9709b7-401e-003c-481f-d59430000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174148Z-m5sfzwkvw95dr13hhsxhts877800000006u000000001gury
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9uczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9uczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgdGhlIFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucy5SZWdleCBjbGFzcywgYW4gaW1wbGVtZW50YXRpb24gb2YgYSByZWd1bGFyIGV4cHJlc3Npb24gZW5naW5lLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zLlJlZ2V4DQpTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMuUmVnZXhPcHRpb25zDQpTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMuTWF0Y2gNClN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucy5Hcm91cA0KU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zLkNhcHR1cmUNClN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucy5NYXRjaEV2YWx1YXRvcg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmVBcHAxLjEiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjYiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:48 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.threading/4.3.0/system.threading.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:48 GMT
      content-type:
      - text/xml
      content-length:
      - '2781'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:11:13 GMT
      etag:
      - '0x8D66147E55CDA17'
      x-ms-request-id:
      - 5a5c11d8-101e-0031-241f-d55ce4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174148Z-3fap7etuuh5ub1vvx0gtr24p1w00000004kg00000000f30f
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UaHJlYWRpbmc8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uVGhyZWFkaW5nPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyB0aGUgZnVuZGFtZW50YWwgc3luY2hyb25pemF0aW9uIHByaW1pdGl2ZXMsIGluY2x1ZGluZyBTeXN0ZW0uVGhyZWFkaW5nLk1vbml0b3IgYW5kIFN5c3RlbS5UaHJlYWRpbmcuTXV0ZXgsIHRoYXQgYXJlIHJlcXVpcmVkIHdoZW4gd3JpdGluZyBhc3luY2hyb25vdXMgY29kZS4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5UaHJlYWRpbmcuTW9uaXRvcg0KU3lzdGVtLlRocmVhZGluZy5TeW5jaHJvbml6YXRpb25Db250ZXh0DQpTeXN0ZW0uVGhyZWFkaW5nLk1hbnVhbFJlc2V0RXZlbnQNClN5c3RlbS5UaHJlYWRpbmcuQXV0b1Jlc2V0RXZlbnQNClN5c3RlbS5UaHJlYWRpbmcuVGhyZWFkTG9jYWwmbHQ7VCZndDsNClN5c3RlbS5UaHJlYWRpbmcuRXZlbnRXYWl0SGFuZGxlDQpTeXN0ZW0uVGhyZWFkaW5nLlNlbWFwaG9yZVNsaW0NClN5c3RlbS5UaHJlYWRpbmcuTXV0ZXgNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUyNTkiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:48 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.xml.readerwriter/4.3.0/system.xml.readerwriter.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:48 GMT
      content-type:
      - text/xml
      content-length:
      - '5217'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:11:11 GMT
      etag:
      - '0x8D66147E3F89186'
      x-ms-request-id:
      - 5a5c124b-101e-0031-151f-d55ce4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174148Z-4ybkudyqdh64hahhtn07xgbcrc000000092g00000000te3s
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5YbWwuUmVhZGVyV3JpdGVyPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlhtbC5SZWFkZXJXcml0ZXI8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHByb3ZpZGVzIGEgZmFzdCwgbm9uLWNhY2hlZCwgZm9yd2FyZC1vbmx5IHdheSB0byByZWFkIGFuZCB3cml0ZSBFeHRlbnNpYmxlIE1hcmt1cCBMYW5ndWFnZSAoWE1MKSBkYXRhLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlhtbC5YbWxOb2RlVHlwZQ0KU3lzdGVtLlhtbC5YbWxFeGNlcHRpb24NClN5c3RlbS5YbWwuWG1sUmVhZGVyDQpTeXN0ZW0uWG1sLlhtbFdyaXRlcg0KU3lzdGVtLlhtbC5JWG1sTGluZUluZm8NClN5c3RlbS5YbWwuWG1sTmFtZVRhYmxlDQpTeXN0ZW0uWG1sLklYbWxOYW1lc3BhY2VSZXNvbHZlcg0KU3lzdGVtLlhtbC5YbWxOYW1lc3BhY2VNYW5hZ2VyDQpTeXN0ZW0uWG1sLlhtbFF1YWxpZmllZE5hbWUNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8uRmlsZVN5c3RlbSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8uRmlsZVN5c3RlbS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcy5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8uRmlsZVN5c3RlbSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8uRmlsZVN5c3RlbS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcy5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5YbWwiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5YbWwiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:48 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.xml.xdocument/4.3.0/system.xml.xdocument.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:48 GMT
      content-type:
      - text/xml
      content-length:
      - '4480'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:11:14 GMT
      etag:
      - '0x8D66147E57DAF82'
      x-ms-request-id:
      - 92bf32d4-301e-006b-6a1f-d53a03000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174148Z-v97597zv4p3uve5suv0fuhn1f000000008kg0000000074xf
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5YbWwuWERvY3VtZW50PC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlhtbC5YRG9jdW1lbnQ8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBjbGFzc2VzIGZvciBMYW5ndWFnZS1JbnRlZ3JhdGVkIFF1ZXJ5IChMSU5RKSB0byBFeHRlbnNpYmxlIE1hcmt1cCBMYW5ndWFnZSAoWE1MKS4gTElOUSB0byBYTUwgaXMgYW4gaW4tbWVtb3J5IFhNTCBwcm9ncmFtbWluZyBpbnRlcmZhY2UgdGhhdCBlbmFibGVzIHlvdSB0byBtb2RpZnkgWE1MIGRvY3VtZW50cyBlZmZpY2llbnRseSBhbmQgZWFzaWx5Lg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlhtbC5MaW5xLlhFbGVtZW50DQpTeXN0ZW0uWG1sLkxpbnEuWEF0dHJpYnV0ZQ0KU3lzdGVtLlhtbC5MaW5xLlhEb2N1bWVudA0KU3lzdGVtLlhtbC5MaW5xLlhUZXh0DQpTeXN0ZW0uWG1sLkxpbnEuWE5vZGUNClN5c3RlbS5YbWwuTGlucS5YQ29udGFpbmVyDQpTeXN0ZW0uWG1sLkxpbnEuWENvbW1lbnQNClN5c3RlbS5YbWwuTGlucS5YT2JqZWN0DQpTeXN0ZW0uWG1sLkxpbnEuWFByb2Nlc3NpbmdJbnN0cnVjdGlvbg0KU3lzdGVtLlhtbC5MaW5xLlhEb2N1bWVudFR5cGUNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLlRvb2xzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlhtbC5SZWFkZXJXcml0ZXIiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlhtbC5SZWFkZXJXcml0ZXIiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5Ub29scyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uR2xvYmFsaXphdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5YbWwuUmVhZGVyV3JpdGVyIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLlhtbC5MaW5xIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:48 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.collections.concurrent/4.3.0/system.collections.concurrent.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:49 GMT
      content-type:
      - text/xml
      content-length:
      - '4073'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:53 GMT
      etag:
      - '0x8D6614791959650'
      x-ms-request-id:
      - 78296f23-101e-000e-5f1f-d59447000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174148Z-1kuytze0v16ptb2ch1y7x7pr2w00000008vg00000001fnty
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db2xsZWN0aW9ucy5Db25jdXJyZW50PC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQ8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHNldmVyYWwgdGhyZWFkLXNhZmUgY29sbGVjdGlvbiBjbGFzc2VzIHRoYXQgc2hvdWxkIGJlIHVzZWQgaW4gcGxhY2Ugb2YgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZXMgaW4gdGhlIFN5c3RlbS5Db2xsZWN0aW9ucy5Ob25HZW5lcmljIGFuZCBTeXN0ZW0uQ29sbGVjdGlvbnMgcGFja2FnZXMgd2hlbmV2ZXIgbXVsdGlwbGUgdGhyZWFkcyBhcmUgYWNjZXNzaW5nIHRoZSBjb2xsZWN0aW9uIGNvbmN1cnJlbnRseS4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5Db2xsZWN0aW9ucy5Db25jdXJyZW50LkNvbmN1cnJlbnREaWN0aW9uYXJ5Jmx0O1RLZXksIFRWYWx1ZSZndDsNClN5c3RlbS5Db2xsZWN0aW9ucy5Db25jdXJyZW50LkNvbmN1cnJlbnRRdWV1ZSZsdDtUJmd0Ow0KU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQuQ29uY3VycmVudEJhZyZsdDtUJmd0Ow0KU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQuQmxvY2tpbmdDb2xsZWN0aW9uJmx0O1QmZ3Q7DQpTeXN0ZW0uQ29sbGVjdGlvbnMuQ29uY3VycmVudC5Db25jdXJyZW50U3RhY2smbHQ7VCZndDsNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLlRyYWNpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuVHJhY2luZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uR2xvYmFsaXphdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUxMTEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:49 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.diagnostics.tracing/4.3.0/system.diagnostics.tracing.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:49 GMT
      content-type:
      - text/xml
      content-length:
      - '3528'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:02 GMT
      etag:
      - '0x8D66147BAEBBF15'
      x-ms-request-id:
      - a4746bca-601e-0004-201f-d530f0000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174149Z-861g4pgz4573b96p9h9xdxpsd800000004c0000000013yfv
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkRpYWdub3N0aWNzLlRyYWNpbmc8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzIHRoYXQgZW5hYmxlIHlvdSB0byBjcmVhdGUgaGlnaCBwZXJmb3JtYW5jZSB0cmFjaW5nIGV2ZW50cyB0byBiZSBjYXB0dXJlZCBieSBldmVudCB0cmFjaW5nIGZvciBXaW5kb3dzIChFVFcpLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkRpYWdub3N0aWNzLlRyYWNpbmcuRXZlbnRTb3VyY2UNClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nLkV2ZW50TGlzdGVuZXINClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nLkV2ZW50TGV2ZWwNClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nLkV2ZW50S2V5d29yZHMNClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nLkV2ZW50V3JpdHRlbkV2ZW50QXJncw0KU3lzdGVtLkRpYWdub3N0aWNzLlRyYWNpbmcuRXZlbnRBdHRyaWJ1dGUNClN5c3RlbS5EaWFnbm9zdGljcy5UcmFjaW5nLkV2ZW50U291cmNlQXR0cmlidXRlDQpTeXN0ZW0uRGlhZ25vc3RpY3MuVHJhY2luZy5Ob25FdmVudEF0dHJpYnV0ZQ0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4yIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuNSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFBvcnRhYmxlMC4wLVByb2ZpbGUxMTEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:49 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.io.compression/4.3.0/system.io.compression.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:49 GMT
      content-type:
      - text/xml
      content-length:
      - '5433'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BCEB4786'
      x-ms-request-id:
      - 58aa1049-201e-0067-601f-d5ad0b000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174149Z-m5sfzwkvw95dr13hhsxhts877800000006wg00000000q53p
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5JTy5Db21wcmVzc2lvbjwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5JTy5Db21wcmVzc2lvbjwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyB0aGF0IHN1cHBvcnQgdGhlIGNvbXByZXNzaW9uIGFuZCBkZWNvbXByZXNzaW9uIG9mIHN0cmVhbXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uSU8uQ29tcHJlc3Npb24uRGVmbGF0ZVN0cmVhbQ0KU3lzdGVtLklPLkNvbXByZXNzaW9uLkdaaXBTdHJlYW0NClN5c3RlbS5JTy5Db21wcmVzc2lvbi5Db21wcmVzc2lvbk1vZGUNClN5c3RlbS5JTy5Db21wcmVzc2lvbi5Db21wcmVzc2lvbkxldmVsDQpTeXN0ZW0uSU8uQ29tcHJlc3Npb24uWmlwQXJjaGl2ZUVudHJ5DQpTeXN0ZW0uSU8uQ29tcHJlc3Npb24uWmlwQXJjaGl2ZQ0KU3lzdGVtLklPLkNvbXByZXNzaW9uLlppcEFyY2hpdmVNb2RlDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVENvcmU1LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0icnVudGltZS5uYXRpdmUuU3lzdGVtLklPLkNvbXByZXNzaW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5CdWZmZXJzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSGFuZGxlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjEiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9InJ1bnRpbWUubmF0aXZlLlN5c3RlbSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJydW50aW1lLm5hdGl2ZS5TeXN0ZW0uSU8uQ29tcHJlc3Npb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkJ1ZmZlcnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMTExIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uSU8uQ29tcHJlc3Npb24iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5JTy5Db21wcmVzc2lvbiIgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5JTy5Db21wcmVzc2lvbiIgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uSU8uQ29tcHJlc3Npb24iIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uSU8uQ29tcHJlc3Npb24iIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uSU8uQ29tcHJlc3Npb24iIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLklPLkNvbXByZXNzaW9uIiB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:49 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.net.http/4.3.0/system.net.http.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:49 GMT
      content-type:
      - text/xml
      content-length:
      - '9158'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:05:29 GMT
      etag:
      - '0x8D6614717F81A12'
      x-ms-request-id:
      - 45474f15-001e-005f-781f-d509cb000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174149Z-v97597zv4p3uve5suv0fuhn1f000000008q00000000012s7
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 22 Aug 2023 17:41:49 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.security.cryptography.x509certificates/4.3.0/system.security.cryptography.x509certificates.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:49 GMT
      content-type:
      - text/xml
      content-length:
      - '7814'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC92FB78'
      x-ms-request-id:
      - 5ec58525-d01e-003e-6c1f-d52a88000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174149Z-1kuytze0v16ptb2ch1y7x7pr2w00000008wg00000000yx9q
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 22 Aug 2023 17:41:49 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.security.cryptography.algorithms/4.3.0/system.security.cryptography.algorithms.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:50 GMT
      content-type:
      - text/xml
      content-length:
      - '5856'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:39 GMT
      etag:
      - '0x8D66147D0E891C1'
      x-ms-request-id:
      - 5bce40db-a01e-000b-291f-d5469c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174149Z-4ybkudyqdh64hahhtn07xgbcrc000000094000000000msen
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuQWxnb3JpdGhtczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuQWxnb3JpdGhtczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgYmFzZSB0eXBlcyBmb3IgY3J5cHRvZ3JhcGhpYyBhbGdvcml0aG1zLCBpbmNsdWRpbmcgaGFzaGluZywgZW5jcnlwdGlvbiwgYW5kIHNpZ25pbmcgb3BlcmF0aW9ucy4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuQWVzDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlJTQQ0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5SU0FQYXJhbWV0ZXJzDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkhNQUNTSEExDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlNIQTI1Ng0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5TSEExDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlNIQTUxMg0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5TSEEzODQNClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuSE1BQ1NIQTI1Ng0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5NRDUNClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuSE1BQ1NIQTM4NA0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5ITUFDU0hBNTEyDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjEiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSGFuZGxlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjQiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS42Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJydW50aW1lLm5hdGl2ZS5TeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkFwcGxlIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9InJ1bnRpbWUubmF0aXZlLlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuT3BlblNzbCIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSGFuZGxlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuTnVtZXJpY3MiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4xIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMyIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:50 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.security.cryptography.primitives/4.3.0/system.security.cryptography.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:50 GMT
      content-type:
      - text/xml
      content-length:
      - '2710'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC797A9C'
      x-ms-request-id:
      - 62796fc6-501e-0030-3f1f-d50338000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174150Z-v97597zv4p3uve5suv0fuhn1f000000008m0000000006baa
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuUHJpbWl0aXZlczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuUHJpbWl0aXZlczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY29tbW9uIHR5cGVzIGZvciB0aGUgY3J5cHRvZ3JhcGhpYyBsaWJyYXJpZXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LklDcnlwdG9UcmFuc2Zvcm0NClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuQXN5bW1ldHJpY0FsZ29yaXRobQ0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5TeW1tZXRyaWNBbGdvcml0aG0NClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuSGFzaEFsZ29yaXRobQ0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5LZXllZEhhc2hBbGdvcml0aG0NClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuSE1BQw0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5LZXlTaXplcw0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5DcnlwdG9ncmFwaGljRXhjZXB0aW9uDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkNpcGhlck1vZGUNClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuUGFkZGluZ01vZGUNClN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuQ3J5cHRvU3RyZWFtDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkNyeXB0b1N0cmVhbU1vZGUNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuRGVidWciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZy5UYXNrcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:50 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.security.cryptography.encoding/4.3.0/system.security.cryptography.encoding.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:50 GMT
      content-type:
      - text/xml
      content-length:
      - '2923'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:37 GMT
      etag:
      - '0x8D66147CFAD36AC'
      x-ms-request-id:
      - 3666cb71-101e-0043-4a1f-d55bab000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174150Z-4ybkudyqdh64hahhtn07xgbcrc000000091g00000000wcgv
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuRW5jb2Rpbmc8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkVuY29kaW5nPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyB0eXBlcyBmb3IgcmVwcmVzZW50aW5nIEFic3RyYWN0IFN5bnRheCBOb3RhdGlvbiBPbmUgKEFTTi4xKS1lbmNvZGVkIGRhdGEuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LkFzbkVuY29kZWREYXRhDQpTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Lk9pZA0KU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5PaWRDb2xsZWN0aW9uDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9InJ1bnRpbWUubmF0aXZlLlN5c3RlbS5TZWN1cml0eS5DcnlwdG9ncmFwaHkuT3BlblNzbCIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLkNvbmN1cnJlbnQiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkxpbnEiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5LlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRleHQuRW5jb2RpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:50 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.interopservices/4.3.0/system.runtime.interopservices.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:50 GMT
      content-type:
      - text/xml
      content-length:
      - '5536'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:13:29 GMT
      etag:
      - '0x8D66148363F74FC'
      x-ms-request-id:
      - 32378c51-901e-002f-2e1f-d5b03c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174150Z-5dxk1snkc508baey39gwkvm720000000012g00000001c2yh
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgdHlwZXMgdGhhdCBzdXBwb3J0IENPTSBpbnRlcm9wIGFuZCBwbGF0Zm9ybSBpbnZva2Ugc2VydmljZXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuR0NIYW5kbGUNClN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5HdWlkQXR0cmlidXRlDQpTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ09NRXhjZXB0aW9uDQpTeXN0ZW0uRGxsTm90Rm91bmRFeGNlcHRpb24NClN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5EbGxJbXBvcnRBdHRyaWJ1dGUNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkhhbmRsZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlQXBwMS4xIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSGFuZGxlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4xIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMiI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjUiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTExMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYuMiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbS5Db3JlIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29yZSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjMiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uQ29yZSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:50 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.interopservices.runtimeinformation/4.3.0/system.runtime.interopservices.runtimeinformation.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:50 GMT
      content-type:
      - text/xml
      content-length:
      - '2862'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:30 GMT
      etag:
      - '0x8D66147A7D98521'
      x-ms-request-id:
      - a1569e9a-401e-005e-561f-d55617000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174150Z-4ybkudyqdh64hahhtn07xgbcrc000000094g00000000hbr5
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5SdW50aW1lSW5mb3JtYXRpb248L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuUnVudGltZUluZm9ybWF0aW9uPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBBUElzIHRvIHF1ZXJ5IGFib3V0IHJ1bnRpbWUgYW5kIE9TIGluZm9ybWF0aW9uLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLlJ1bnRpbWVJbmZvcm1hdGlvbg0KU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk9TUGxhdGZvcm0NCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJydW50aW1lLm5hdGl2ZS5TeXN0ZW0iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:50 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.numerics/4.3.0/system.runtime.numerics.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:51 GMT
      content-type:
      - text/xml
      content-length:
      - '2796'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:27 GMT
      etag:
      - '0x8D66147A5F9FEE3'
      x-ms-request-id:
      - 02c121d4-601e-0014-361f-d5f598000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174151Z-q9ssc0pwrh6hp3anum0kgmh6ug00000002wg000000015ah2
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLk51bWVyaWNzPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJ1bnRpbWUuTnVtZXJpY3M8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBudW1lcmljIHR5cGVzIFN5c3RlbS5OdW1lcmljcy5CaWdJbnRlZ2VyIGFuZCBTeXN0ZW0uTnVtZXJpY3MuQ29tcGxleCwgd2hpY2ggY29tcGxlbWVudCB0aGUgbnVtZXJpYyBwcmltaXRpdmVzLCBzdWNoIGFzIFN5c3RlbS5CeXRlLCBTeXN0ZW0uRG91YmxlIGFuZCBTeXN0ZW0uSW50MzIuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uTnVtZXJpY3MuQmlnSW50ZWdlcg0KU3lzdGVtLk51bWVyaWNzLkNvbXBsZXgNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMTExIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uTnVtZXJpY3MiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:51 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.threading.timer/4.3.0/system.threading.timer.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:51 GMT
      content-type:
      - text/xml
      content-length:
      - '2208'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC8C1C43'
      x-ms-request-id:
      - '06833d2e-c01e-0050-5b1f-d57fa7000000'
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174151Z-k89pmaugft4pvcmkx160mg3kcs000000024g00000000k7ar
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5UaHJlYWRpbmcuVGltZXI8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uVGhyZWFkaW5nLlRpbWVyPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyB0aGUgU3lzdGVtLlRocmVhZGluZy5UaW1lciBjbGFzcywgd2hpY2ggaXMgYSBtZWNoYW5pc20gZm9yIGV4ZWN1dGluZyBhIG1ldGhvZCBhdCBzcGVjaWZpZWQgaW50ZXJ2YWxzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlRocmVhZGluZy5UaW1lcg0KU3lzdGVtLlRocmVhZGluZy5UaW1lckNhbGxiYWNrDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUuMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRDb3JlNS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjIiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMTUxIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:51 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.win32.primitives/4.3.0/microsoft.win32.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:51 GMT
      content-type:
      - text/xml
      content-length:
      - '1936'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Tue, 18 Dec 2018 00:02:50 GMT
      etag:
      - '0x8D6647C269E8EB4'
      x-ms-request-id:
      - 4547544c-001e-005f-6c1f-d509cb000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174151Z-861g4pgz4573b96p9h9xdxpsd800000004b000000001hfq4
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPk1pY3Jvc29mdC5XaW4zMi5QcmltaXRpdmVzPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+TWljcm9zb2Z0LldpbjMyLlByaW1pdGl2ZXM8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNvbW1vbiB0eXBlcyBmb3IgV2luMzItYmFzZWQgbGlicmFyaWVzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLldpbjMyRXhjZXB0aW9uDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:51 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.appcontext/4.3.0/system.appcontext.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:51 GMT
      content-type:
      - text/xml
      content-length:
      - '2411'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:18 GMT
      etag:
      - '0x8D661477CC51893'
      x-ms-request-id:
      - 5f2a17ff-901e-0072-721f-d5bab8000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174151Z-3fap7etuuh5ub1vvx0gtr24p1w00000004rg0000000029d2
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5BcHBDb250ZXh0PC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkFwcENvbnRleHQ8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBTeXN0ZW0uQXBwQ29udGV4dCBjbGFzcywgd2hpY2ggYWxsb3dzIGFjY2VzcyB0byB0aGUgQmFzZURpcmVjdG9yeSBwcm9wZXJ0eSBhbmQgb3RoZXIgYXBwbGljYXRpb24gc3BlY2lmaWMgZGF0YS4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5BcHBDb250ZXh0DQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjMiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjYiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4zIiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:51 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.console/4.3.0/system.console.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:52 GMT
      content-type:
      - text/xml
      content-length:
      - '2020'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:12:57 GMT
      etag:
      - '0x8D661482355B1D1'
      x-ms-request-id:
      - 627973cd-501e-0030-0f1f-d50338000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174151Z-1kuytze0v16ptb2ch1y7x7pr2w00000008w0000000017ksu
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db25zb2xlPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkNvbnNvbGU8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBTeXN0ZW0uQ29uc29sZSBjbGFzcywgd2hpY2ggcmVwcmVzZW50cyB0aGUgc3RhbmRhcmQgaW5wdXQsIG91dHB1dCBhbmQgZXJyb3Igc3RyZWFtcyBmb3IgY29uc29sZSBhcHBsaWNhdGlvbnMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uQ29uc29sZQ0KU3lzdGVtLkNvbnNvbGVDb2xvcg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlBsYXRmb3JtcyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5UYXJnZXRzIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:52 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.globalization.calendars/4.3.0/system.globalization.calendars.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:52 GMT
      content-type:
      - text/xml
      content-length:
      - '2365'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:52 GMT
      etag:
      - '0x8D66147916D467A'
      x-ms-request-id:
      - '06833fa5-c01e-0050-181f-d57fa7000000'
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174152Z-v97597zv4p3uve5suv0fuhn1f000000008kg0000000075r7
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5HbG9iYWxpemF0aW9uLkNhbGVuZGFyczwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5HbG9iYWxpemF0aW9uLkNhbGVuZGFyczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyBmb3IgcGVyZm9ybWluZyBkYXRlIGNhbGN1bGF0aW9ucyB1c2luZyBzcGVjaWZpYyBjYWxlbmRhcnMsIGluY2x1ZGluZyB0aGUgR3JlZ29yaWFuLCBKdWxpYW4sIEhpanJpIGFuZCBLb3JlYW4gY2FsZW5kYXJzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkdsb2JhbGl6YXRpb24uSGlqcmlDYWxlbmRhcg0KU3lzdGVtLkdsb2JhbGl6YXRpb24uR3JlZ29yaWFuQ2FsZW5kYXINClN5c3RlbS5HbG9iYWxpemF0aW9uLkhlYnJld0NhbGVuZGFyDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5Lb3JlYW5DYWxlbmRhcg0KU3lzdGVtLkdsb2JhbGl6YXRpb24uVGhhaUJ1ZGRoaXN0Q2FsZW5kYXINClN5c3RlbS5HbG9iYWxpemF0aW9uLlRhaXdhbkNhbGVuZGFyDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5KYXBhbmVzZUNhbGVuZGFyDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5HcmVnb3JpYW5DYWxlbmRhclR5cGVzDQpTeXN0ZW0uR2xvYmFsaXphdGlvbi5QZXJzaWFuQ2FsZW5kYXINClN5c3RlbS5HbG9iYWxpemF0aW9uLlVtQWxRdXJhQ2FsZW5kYXINCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uR2xvYmFsaXphdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:52 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.io.compression.zipfile/4.3.0/system.io.compression.zipfile.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:52 GMT
      content-type:
      - text/xml
      content-length:
      - '2516'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:37 GMT
      etag:
      - '0x8D66147CF965E72'
      x-ms-request-id:
      - 9c26332c-f01e-004b-231f-d541a4000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174152Z-k89pmaugft4pvcmkx160mg3kcs000000021g00000001a8s4
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5JTy5Db21wcmVzc2lvbi5aaXBGaWxlPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLklPLkNvbXByZXNzaW9uLlppcEZpbGU8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgdGhhdCBzdXBwb3J0IHRoZSBjb21wcmVzc2lvbiBhbmQgZGVjb21wcmVzc2lvbiBvZiBzdHJlYW1zIHVzaW5nIGZpbGUgc3lzdGVtIHBhdGhzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLklPLkNvbXByZXNzaW9uLlppcEZpbGUNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQnVmZmVycyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPLkNvbXByZXNzaW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTy5GaWxlU3lzdGVtIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTy5GaWxlU3lzdGVtLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGV4dC5FbmNvZGluZyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0uSU8uQ29tcHJlc3Npb24uRmlsZVN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:52 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.io.filesystem/4.3.0/system.io.filesystem.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:52 GMT
      content-type:
      - text/xml
      content-length:
      - '2465'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D028CDED'
      x-ms-request-id:
      - 5bce4745-a01e-000b-591f-d5469c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174152Z-861g4pgz4573b96p9h9xdxpsd800000004b000000001hfy0
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5JTy5GaWxlU3lzdGVtPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLklPLkZpbGVTeXN0ZW08L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHR5cGVzIHRoYXQgYWxsb3cgcmVhZGluZyBhbmQgd3JpdGluZyB0byBmaWxlcyBhbmQgdHlwZXMgdGhhdCBwcm92aWRlIGJhc2ljIGZpbGUgYW5kIGRpcmVjdG9yeSBzdXBwb3J0Lg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLklPLkZpbGVTdHJlYW0NClN5c3RlbS5JTy5GaWxlSW5mbw0KU3lzdGVtLklPLkRpcmVjdG9yeUluZm8NClN5c3RlbS5JTy5GaWxlU3lzdGVtSW5mbw0KU3lzdGVtLklPLkZpbGUNClN5c3RlbS5JTy5EaXJlY3RvcnkNClN5c3RlbS5JTy5TZWFyY2hPcHRpb24NClN5c3RlbS5JTy5GaWxlT3B0aW9ucw0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTy5GaWxlU3lzdGVtLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJNaWNyb3NvZnQuTkVUQ29yZS5QbGF0Zm9ybXMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuVGFyZ2V0cyIgdmVyc2lvbj0iMS4xLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uSU8iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPLkZpbGVTeXN0ZW0uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5IYW5kbGVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmcuVGFza3MiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:52 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.io.filesystem.primitives/4.3.0/system.io.filesystem.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:53 GMT
      content-type:
      - text/xml
      content-length:
      - '1891'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:12:57 GMT
      etag:
      - '0x8D66148232A5429'
      x-ms-request-id:
      - 75347882-301e-0019-5e1f-d53d4c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174153Z-q9ssc0pwrh6hp3anum0kgmh6ug00000002v0000000023brm
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5JTy5GaWxlU3lzdGVtLlByaW1pdGl2ZXM8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uSU8uRmlsZVN5c3RlbS5QcmltaXRpdmVzPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjb21tb24gZW51bWVyYXRpb25zIGFuZCBleGNlcHRpb25zIGZvciBwYXRoLWJhc2VkIEkvTyBsaWJyYXJpZXMuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uSU8uRGlyZWN0b3J5Tm90Rm91bmRFeGNlcHRpb24NClN5c3RlbS5JTy5GaWxlQWNjZXNzDQpTeXN0ZW0uSU8uRmlsZUxvYWRFeGNlcHRpb24NClN5c3RlbS5JTy5QYXRoVG9vTG9uZ0V4Y2VwdGlvbg0KU3lzdGVtLklPLkZpbGVNb2RlDQpTeXN0ZW0uSU8uRmlsZVNoYXJlDQpTeXN0ZW0uSU8uRmlsZUF0dHJpYnV0ZXMNCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:53 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.net.sockets/4.3.0/system.net.sockets.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:53 GMT
      content-type:
      - text/xml
      content-length:
      - '2483'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:38 GMT
      etag:
      - '0x8D66147D022F4DC'
      x-ms-request-id:
      - 78297aa7-101e-000e-6b1f-d59447000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174153Z-v97597zv4p3uve5suv0fuhn1f000000008kg0000000075wm
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5OZXQuU29ja2V0czwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5OZXQuU29ja2V0czwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY2xhc3NlcyBzdWNoIGFzIFNvY2tldCwgVGNwQ2xpZW50IGFuZCBVZHBDbGllbnQsIHdoaWNoIGVuYWJsZSBkZXZlbG9wZXJzIHRvIHNlbmQgYW5kIHJlY2VpdmUgZGF0YSBvdmVyIHRoZSBuZXR3b3JrLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLk5ldC5Tb2NrZXRzLlNvY2tldA0KU3lzdGVtLk5ldC5Tb2NrZXRzLlNvY2tldEFzeW5jRXZlbnRBcmdzDQpTeXN0ZW0uTmV0LlNvY2tldHMuTGluZ2VyT3B0aW9uDQpTeXN0ZW0uTmV0LlNvY2tldHMuU29ja2V0QXN5bmNPcGVyYXRpb24NClN5c3RlbS5OZXQuU29ja2V0cy5Qcm90b2NvbFR5cGUNClN5c3RlbS5OZXQuU29ja2V0cy5OZXR3b3JrU3RyZWFtDQpTeXN0ZW0uTmV0LlNvY2tldHMuVGNwQ2xpZW50DQpTeXN0ZW0uTmV0LlNvY2tldHMuU29ja2V0VHlwZQ0KU3lzdGVtLk5ldC5Tb2NrZXRzLlVkcENsaWVudA0KU3lzdGVtLk5ldC5Tb2NrZXRzLlNvY2tldFNodXRkb3duDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iTWljcm9zb2Z0Lk5FVENvcmUuUGxhdGZvcm1zIiB2ZXJzaW9uPSIxLjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9Ik1pY3Jvc29mdC5ORVRDb3JlLlRhcmdldHMiIHZlcnNpb249IjEuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLklPIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5OZXQuUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:53 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.collections.specialized/4.3.0/system.collections.specialized.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:53 GMT
      content-type:
      - text/xml
      content-length:
      - '2846'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:27 GMT
      etag:
      - '0x8D66147A5D0BD85'
      x-ms-request-id:
      - a33237a0-901e-004d-721f-d5721b000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174153Z-k89pmaugft4pvcmkx160mg3kcs000000021g00000001a8xb
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZDwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZDwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgb2xkZXIgc3BlY2lhbGl6ZWQgbm9uLWdlbmVyaWMgY29sbGVjdGlvbnM7IGZvciBleGFtcGxlLCBhIGxpbmtlZCBsaXN0IGRpY3Rpb25hcnksIGEgYml0IHZlY3RvciwgYW5kIGNvbGxlY3Rpb25zIHRoYXQgY29udGFpbiBvbmx5IHN0cmluZ3MuDQoNCkNvbW1vbmx5IFVzZWQgVHlwZXM6DQpTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQuTmFtZVZhbHVlQ29sbGVjdGlvbg0KU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkLk5hbWVPYmplY3RDb2xsZWN0aW9uQmFzZQ0KU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkLlN0cmluZ0NvbGxlY3Rpb24NClN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZC5JT3JkZXJlZERpY3Rpb25hcnkNClN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZC5IeWJyaWREaWN0aW9uYXJ5DQpTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQuT3JkZXJlZERpY3Rpb25hcnkNClN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZC5MaXN0RGljdGlvbmFyeQ0KU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkLlN0cmluZ0RpY3Rpb25hcnkNClN5c3RlbS5Db2xsZWN0aW9ucy5TcGVjaWFsaXplZC5CaXRWZWN0b3IzMg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4zIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db2xsZWN0aW9ucy5Ob25HZW5lcmljIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:53 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.componentmodel/4.3.0/system.componentmodel.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:53 GMT
      content-type:
      - text/xml
      content-length:
      - '2346'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:37 GMT
      etag:
      - '0x8D66147CF9721E1'
      x-ms-request-id:
      - c2f2e437-b01e-0017-1e1f-d514fc000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174153Z-q9ssc0pwrh6hp3anum0kgmh6ug00000002w000000001gsbf
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db21wb25lbnRNb2RlbDwvaWQ+DQogICAgPHZlcnNpb24+NC4zLjA8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5Db21wb25lbnRNb2RlbDwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgaW50ZXJmYWNlcyBmb3IgdGhlIGVkaXRpbmcgYW5kIGNoYW5nZSB0cmFja2luZyBvZiBvYmplY3RzIHVzZWQgYXMgZGF0YSBzb3VyY2VzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLkNhbmNlbEV2ZW50QXJncw0KU3lzdGVtLklTZXJ2aWNlUHJvdmlkZXINClN5c3RlbS5Db21wb25lbnRNb2RlbC5JRWRpdGFibGVPYmplY3QNClN5c3RlbS5Db21wb25lbnRNb2RlbC5JQ2hhbmdlVHJhY2tpbmcNClN5c3RlbS5Db21wb25lbnRNb2RlbC5JUmV2ZXJ0aWJsZUNoYW5nZVRyYWNraW5nDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:53 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.componentmodel.typeconverter/4.3.0/system.componentmodel.typeconverter.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:54 GMT
      content-type:
      - text/xml
      content-length:
      - '5269'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:06 GMT
      etag:
      - '0x8D66147BD062769'
      x-ms-request-id:
      - 986a10ac-b01e-0075-771f-d5d6db000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174153Z-1kuytze0v16ptb2ch1y7x7pr2w00000008u00000000222d6
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db21wb25lbnRNb2RlbC5UeXBlQ29udmVydGVyPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkNvbXBvbmVudE1vZGVsLlR5cGVDb252ZXJ0ZXI8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIHRoZSBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuVHlwZUNvbnZlcnRlciBjbGFzcywgd2hpY2ggcmVwcmVzZW50cyBhIHVuaWZpZWQgd2F5IG9mIGNvbnZlcnRpbmcgdHlwZXMgb2YgdmFsdWVzIHRvIG90aGVyIHR5cGVzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLlR5cGVDb252ZXJ0ZXINClN5c3RlbS5Db21wb25lbnRNb2RlbC5UeXBlQ29udmVydGVyQXR0cmlidXRlDQpTeXN0ZW0uQ29tcG9uZW50TW9kZWwuUHJvcGVydHlEZXNjcmlwdG9yDQpTeXN0ZW0uQ29tcG9uZW50TW9kZWwuU3RyaW5nQ29udmVydGVyDQpTeXN0ZW0uQ29tcG9uZW50TW9kZWwuSVR5cGVEZXNjcmlwdG9yQ29udGV4dA0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLkVudW1Db252ZXJ0ZXINClN5c3RlbS5Db21wb25lbnRNb2RlbC5UeXBlRGVzY3JpcHRvcg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLkludDMyQ29udmVydGVyDQpTeXN0ZW0uQ29tcG9uZW50TW9kZWwuQm9vbGVhbkNvbnZlcnRlcg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRvdWJsZUNvbnZlcnRlcg0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db21wb25lbnRNb2RlbC5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLk5vbkdlbmVyaWMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbXBvbmVudE1vZGVsLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbXBvbmVudE1vZGVsIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db21wb25lbnRNb2RlbC5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuNSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLk5vbkdlbmVyaWMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbGxlY3Rpb25zLlNwZWNpYWxpemVkIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db21wb25lbnRNb2RlbCIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29tcG9uZW50TW9kZWwuUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uR2xvYmFsaXphdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uTGlucSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uVHlwZUV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5Db21wb25lbnRNb2RlbC5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbXBvbmVudE1vZGVsLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29tcG9uZW50TW9kZWwuUHJpbWl0aXZlcyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9IlN5c3RlbSIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42LjIiIC8+DQogICAgPC9mcmFtZXdvcmtBc3NlbWJsaWVzPg0KICA8L21ldGFkYXRhPg0KPC9wYWNrYWdlPg==
  recorded_at: Tue, 22 Aug 2023 17:41:54 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.componentmodel.primitives/4.3.0/system.componentmodel.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:54 GMT
      content-type:
      - text/xml
      content-length:
      - '2271'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:09:29 GMT
      etag:
      - '0x8D66147A6F04485'
      x-ms-request-id:
      - c0dd5c79-c01e-001d-721f-d5b04b000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174154Z-k89pmaugft4pvcmkx160mg3kcs000000025000000000ccxy
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db21wb25lbnRNb2RlbC5QcmltaXRpdmVzPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkNvbXBvbmVudE1vZGVsLlByaW1pdGl2ZXM8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGludGVyZmFjZXMgdGhhdCBhcmUgdXNlZCB0byBpbXBsZW1lbnQgdGhlIHJ1bi10aW1lIGFuZCBkZXNpZ24tdGltZSBiZWhhdmlvciBvZiBjb21wb25lbnRzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbXBvbmVudE1vZGVsLklDb21wb25lbnQNClN5c3RlbS5Db21wb25lbnRNb2RlbC5JQ29udGFpbmVyDQpTeXN0ZW0uQ29tcG9uZW50TW9kZWwuSVNpdGUNClN5c3RlbS5Db21wb25lbnRNb2RlbC5Db21wb25lbnRDb2xsZWN0aW9uDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkNvbXBvbmVudE1vZGVsIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lOC4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93c1Bob25lQXBwOC4xIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:54 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.collections.nongeneric/4.3.0/system.collections.nongeneric.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:54 GMT
      content-type:
      - text/xml
      content-length:
      - '2667'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:08:54 GMT
      etag:
      - '0x8D66147927570AA'
      x-ms-request-id:
      - 7db07d19-901e-0010-6f1f-d5789f000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174154Z-3fap7etuuh5ub1vvx0gtr24p1w00000004mg00000000dfnx
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5Db2xsZWN0aW9ucy5Ob25HZW5lcmljPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLkNvbGxlY3Rpb25zLk5vbkdlbmVyaWM8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGNsYXNzZXMgdGhhdCBkZWZpbmUgb2xkZXIgbm9uLWdlbmVyaWMgY29sbGVjdGlvbnMgb2Ygb2JqZWN0cywgc3VjaCBhcyBsaXN0cywgcXVldWVzLCBoYXNoIHRhYmxlcyBhbmQgZGljdGlvbmFyaWVzLiBEZXZlbG9wZXJzIHNob3VsZCBwcmVmZXIgdGhlIGdlbmVyaWMgY29sbGVjdGlvbnMgaW4gdGhlIFN5c3RlbS5Db2xsZWN0aW9ucyBwYWNrYWdlLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdA0KU3lzdGVtLkNvbGxlY3Rpb25zLkhhc2h0YWJsZQ0KU3lzdGVtLkNvbGxlY3Rpb25zLkNvbGxlY3Rpb25CYXNlDQpTeXN0ZW0uQ29sbGVjdGlvbnMuUmVhZE9ubHlDb2xsZWN0aW9uQmFzZQ0KU3lzdGVtLkNvbGxlY3Rpb25zLlN0YWNrDQpTeXN0ZW0uQ29sbGVjdGlvbnMuU29ydGVkTGlzdA0KU3lzdGVtLkNvbGxlY3Rpb25zLkRpY3Rpb25hcnlCYXNlDQpTeXN0ZW0uQ29sbGVjdGlvbnMuUXVldWUNClN5c3RlbS5Db2xsZWN0aW9ucy5Db21wYXJlcg0KU3lzdGVtLkNvbGxlY3Rpb25zLkNhc2VJbnNlbnNpdGl2ZUNvbXBhcmVyDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlRocmVhZGluZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5pT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLk1hYzIuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uV2F0Y2hPUzEuMCIgLz4NCiAgICA8L2RlcGVuZGVuY2llcz4NCiAgICA8ZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Im1zY29ybGliIiB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJTeXN0ZW0iIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:54 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.dynamic.runtime/4.3.0/system.dynamic.runtime.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:54 GMT
      content-type:
      - text/xml
      content-length:
      - '4731'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:12:55 GMT
      etag:
      - '0x8D6614821FE6ED9'
      x-ms-request-id:
      - 61d25255-c01e-0032-371f-d5bd80000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174154Z-3fap7etuuh5ub1vvx0gtr24p1w00000004mg00000000dfq4
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5EeW5hbWljLlJ1bnRpbWU8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uRHluYW1pYy5SdW50aW1lPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBjbGFzc2VzIGFuZCBpbnRlcmZhY2VzIHRoYXQgc3VwcG9ydCB0aGUgRHluYW1pYyBMYW5ndWFnZSBSdW50aW1lIChETFIpLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcy5DYWxsU2l0ZQ0KU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcy5DYWxsU2l0ZSZsdDtUJmd0Ow0KU3lzdGVtLkR5bmFtaWMuSUR5bmFtaWNNZXRhT2JqZWN0UHJvdmlkZXINClN5c3RlbS5EeW5hbWljLkR5bmFtaWNNZXRhT2JqZWN0DQpTeXN0ZW0uRHluYW1pYy5TZXRNZW1iZXJCaW5kZXINClN5c3RlbS5EeW5hbWljLkdldE1lbWJlckJpbmRlcg0KU3lzdGVtLkR5bmFtaWMuRXhwYW5kb09iamVjdA0KU3lzdGVtLkR5bmFtaWMuRHluYW1pY09iamVjdA0KU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcy5DYWxsU2l0ZUJpbmRlcg0KU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcy5Db25kaXRpb25hbFdlYWtUYWJsZSZsdDtUS2V5LCBUVmFsdWUmZ3Q7DQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MjE8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xLkV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5PYmplY3RNb2RlbCIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5UeXBlRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uTGlucS5FeHByZXNzaW9ucyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uT2JqZWN0TW9kZWwiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xLkV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5PYmplY3RNb2RlbCIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0IiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLkVtaXQuSUxHZW5lcmF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlByaW1pdGl2ZXMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uVHlwZUV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uVGhyZWFkaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLkNvcmUiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:54 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.reflection.typeextensions/4.3.0/system.reflection.typeextensions.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:54 GMT
      content-type:
      - text/xml
      content-length:
      - '3051'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:03 GMT
      etag:
      - '0x8D66147BBAA3EC0'
      x-ms-request-id:
      - 78297e52-101e-000e-6f1f-d59447000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174154Z-4ybkudyqdh64hahhtn07xgbcrc000000094000000000mt7s
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SZWZsZWN0aW9uLlR5cGVFeHRlbnNpb25zPC9pZD4NCiAgICA8dmVyc2lvbj40LjMuMDwvdmVyc2lvbj4NCiAgICA8dGl0bGU+U3lzdGVtLlJlZmxlY3Rpb24uVHlwZUV4dGVuc2lvbnM8L3RpdGxlPg0KICAgIDxhdXRob3JzPk1pY3Jvc29mdDwvYXV0aG9ycz4NCiAgICA8b3duZXJzPm1pY3Jvc29mdCxkb3RuZXRmcmFtZXdvcms8L293bmVycz4NCiAgICA8cmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPnRydWU8L3JlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT4NCiAgICA8bGljZW5zZVVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJZD0zMjk3NzA8L2xpY2Vuc2VVcmw+DQogICAgPHByb2plY3RVcmw+aHR0cHM6Ly9kb3QubmV0LzwvcHJvamVjdFVybD4NCiAgICA8aWNvblVybD5odHRwOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD0yODg4NTk8L2ljb25Vcmw+DQogICAgPGRlc2NyaXB0aW9uPlByb3ZpZGVzIGV4dGVuc2lvbnMgbWV0aG9kcyBmb3IgU3lzdGVtLlR5cGUgdGhhdCBhcmUgZGVzaWduZWQgdG8gYmUgc291cmNlLWNvbXBhdGlibGUgd2l0aCBvbGRlciBmcmFtZXdvcmsgcmVmbGVjdGlvbi1iYXNlZCBBUElzLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KU3lzdGVtLlJlZmxlY3Rpb24uVHlwZUV4dGVuc2lvbnMNClN5c3RlbS5SZWZsZWN0aW9uLkJpbmRpbmdGbGFncw0KIA0KV2hlbiB1c2luZyBOdUdldCAzLnggdGhpcyBwYWNrYWdlIHJlcXVpcmVzIGF0IGxlYXN0IHZlcnNpb24gMy40LjwvZGVzY3JpcHRpb24+DQogICAgPHJlbGVhc2VOb3Rlcz5odHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Nzk5NDIxPC9yZWxlYXNlTm90ZXM+DQogICAgPGNvcHlyaWdodD7CqSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uICBBbGwgcmlnaHRzIHJlc2VydmVkLjwvY29weXJpZ2h0Pg0KICAgIDxzZXJ2aWNlYWJsZT50cnVlPC9zZXJ2aWNlYWJsZT4NCiAgICA8ZGVwZW5kZW5jaWVzPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub0FuZHJvaWQxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vVG91Y2gxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uRGlhZ25vc3RpY3MuQ29udHJhY3RzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uTGlucSIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbiIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS41Ij4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjMuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNi4yIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0ibXNjb3JsaWIiIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICA8L2ZyYW1ld29ya0Fzc2VtYmxpZXM+DQogIDwvbWV0YWRhdGE+DQo8L3BhY2thZ2U+
  recorded_at: Tue, 22 Aug 2023 17:41:54 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.xml.xmldocument/4.3.0/system.xml.xmldocument.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:55 GMT
      content-type:
      - text/xml
      content-length:
      - '2867'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 22:10:05 GMT
      etag:
      - '0x8D66147BC8A954C'
      x-ms-request-id:
      - a3323b2e-901e-004d-471f-d5721b000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174155Z-k89pmaugft4pvcmkx160mg3kcs0000000230000000011rsu
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5YbWwuWG1sRG9jdW1lbnQ8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMy4wPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5TeXN0ZW0uWG1sLlhtbERvY3VtZW50PC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBhbiBvbGRlciBpbi1tZW1vcnkgRXh0ZW5zaWJsZSBNYXJrdXAgTGFuZ3VhZ2UgKFhNTCkgcHJvZ3JhbW1pbmcgaW50ZXJmYWNlIHRoYXQgZW5hYmxlcyB5b3UgdG8gbW9kaWZ5IFhNTCBkb2N1bWVudHMuIERldmVsb3BlcnMgc2hvdWxkIHByZWZlciB0aGUgY2xhc3NlcyBpbiB0aGUgU3lzdGVtLlhtbC5YRG9jdW1lbnQgcGFja2FnZS4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5YbWwuWG1sTm9kZQ0KU3lzdGVtLlhtbC5YbWxFbGVtZW50DQpTeXN0ZW0uWG1sLlhtbEF0dHJpYnV0ZQ0KU3lzdGVtLlhtbC5YbWxEb2N1bWVudA0KU3lzdGVtLlhtbC5YbWxEZWNsYXJhdGlvbg0KU3lzdGVtLlhtbC5YbWxUZXh0DQpTeXN0ZW0uWG1sLlhtbENvbW1lbnQNClN5c3RlbS5YbWwuWG1sTm9kZUxpc3QNClN5c3RlbS5YbWwuWG1sV2hpdGVzcGFjZQ0KU3lzdGVtLlhtbC5YbWxDRGF0YVNlY3Rpb24NCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQyMTwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNiIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkRpYWdub3N0aWNzLkRlYnVnIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5HbG9iYWxpemF0aW9uIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5JTyIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4zLjAiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4zLjAiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZS5FeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UZXh0LkVuY29kaW5nIiB2ZXJzaW9uPSI0LjMuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMy4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlhtbC5SZWFkZXJXcml0ZXIiIHZlcnNpb249IjQuMy4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLlhtbCIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:55 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/newtonsoft.json/9.0.1/newtonsoft.json.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:55 GMT
      content-type:
      - text/xml
      content-length:
      - '2715'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Mon, 15 Oct 2018 01:04:22 GMT
      etag:
      - '0x8D6323A24B56F56'
      x-ms-request-id:
      - d01522bd-601e-0076-291f-d537bf000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174155Z-hgu4uvpkux28depfzw51wdeh48000000091000000000288z
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n
        \ <metadata>\r\n    <id>Newtonsoft.Json</id>\r\n    <version>9.0.1</version>\r\n
        \   <title>Json.NET</title>\r\n    <authors>James Newton-King</authors>\r\n
        \   <owners>James Newton-King</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n
        \   <licenseUrl>https://raw.github.com/JamesNK/Newtonsoft.Json/master/LICENSE.md</licenseUrl>\r\n
        \   <projectUrl>http://www.newtonsoft.com/json</projectUrl>\r\n    <iconUrl>http://www.newtonsoft.com/content/images/nugeticon.png</iconUrl>\r\n
        \   <description>Json.NET is a popular high-performance JSON framework for
        .NET</description>\r\n    <language>en-US</language>\r\n    <tags>json</tags>\r\n
        \   <dependencies>\r\n      <group targetFramework=\".NETFramework4.5\" />\r\n
        \     <group targetFramework=\".NETFramework4.0\" />\r\n      <group targetFramework=\".NETFramework3.5\"
        />\r\n      <group targetFramework=\".NETFramework2.0\" />\r\n      <group
        targetFramework=\".NETPortable4.5-Profile259\" />\r\n      <group targetFramework=\".NETPortable4.0-Profile328\"
        />\r\n      <group targetFramework=\".NETStandard1.0\">\r\n        <dependency
        id=\"Microsoft.CSharp\" version=\"4.0.1\" />\r\n        <dependency id=\"System.Collections\"
        version=\"4.0.11\" />\r\n        <dependency id=\"System.Diagnostics.Debug\"
        version=\"4.0.11\" />\r\n        <dependency id=\"System.Dynamic.Runtime\"
        version=\"4.0.11\" />\r\n        <dependency id=\"System.Globalization\" version=\"4.0.11\"
        />\r\n        <dependency id=\"System.IO\" version=\"4.1.0\" />\r\n        <dependency
        id=\"System.Linq\" version=\"4.1.0\" />\r\n        <dependency id=\"System.Linq.Expressions\"
        version=\"4.1.0\" />\r\n        <dependency id=\"System.ObjectModel\" version=\"4.0.12\"
        />\r\n        <dependency id=\"System.Reflection\" version=\"4.1.0\" />\r\n
        \       <dependency id=\"System.Reflection.Extensions\" version=\"4.0.1\"
        />\r\n        <dependency id=\"System.Resources.ResourceManager\" version=\"4.0.1\"
        />\r\n        <dependency id=\"System.Runtime\" version=\"4.1.0\" />\r\n        <dependency
        id=\"System.Runtime.Extensions\" version=\"4.1.0\" />\r\n        <dependency
        id=\"System.Runtime.Serialization.Primitives\" version=\"4.1.1\" />\r\n        <dependency
        id=\"System.Text.Encoding\" version=\"4.0.11\" />\r\n        <dependency id=\"System.Text.Encoding.Extensions\"
        version=\"4.0.11\" />\r\n        <dependency id=\"System.Text.RegularExpressions\"
        version=\"4.1.0\" />\r\n        <dependency id=\"System.Threading\" version=\"4.0.11\"
        />\r\n        <dependency id=\"System.Threading.Tasks\" version=\"4.0.11\"
        />\r\n        <dependency id=\"System.Xml.ReaderWriter\" version=\"4.0.11\"
        />\r\n        <dependency id=\"System.Xml.XDocument\" version=\"4.0.11\" />\r\n
        \     </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>"
  recorded_at: Tue, 22 Aug 2023 17:41:55 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/microsoft.csharp/4.0.1/microsoft.csharp.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:55 GMT
      content-type:
      - text/xml
      content-length:
      - '5666'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Mon, 17 Dec 2018 23:35:37 GMT
      etag:
      - '0x8D664785960325D'
      x-ms-request-id:
      - d454cc62-201e-0005-401f-d56f2c000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174155Z-5dxk1snkc508baey39gwkvm720000000012g00000001c470
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPk1pY3Jvc29mdC5DU2hhcnA8L2lkPg0KICAgIDx2ZXJzaW9uPjQuMC4xPC92ZXJzaW9uPg0KICAgIDx0aXRsZT5NaWNyb3NvZnQuQ1NoYXJwPC90aXRsZT4NCiAgICA8YXV0aG9ycz5NaWNyb3NvZnQ8L2F1dGhvcnM+DQogICAgPG93bmVycz5taWNyb3NvZnQsZG90bmV0ZnJhbWV3b3JrPC9vd25lcnM+DQogICAgPHJlcXVpcmVMaWNlbnNlQWNjZXB0YW5jZT50cnVlPC9yZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+DQogICAgPGxpY2Vuc2VVcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSWQ9MzI5NzcwPC9saWNlbnNlVXJsPg0KICAgIDxwcm9qZWN0VXJsPmh0dHBzOi8vZG90Lm5ldC88L3Byb2plY3RVcmw+DQogICAgPGljb25Vcmw+aHR0cDovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9MaW5rSUQ9Mjg4ODU5PC9pY29uVXJsPg0KICAgIDxkZXNjcmlwdGlvbj5Qcm92aWRlcyBzdXBwb3J0IGZvciBjb21waWxhdGlvbiBhbmQgY29kZSBnZW5lcmF0aW9uLCBpbmNsdWRpbmcgZHluYW1pYywgdXNpbmcgdGhlIEMjIGxhbmd1YWdlLg0KDQpDb21tb25seSBVc2VkIFR5cGVzOg0KTWljcm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyLkJpbmRlcg0KTWljcm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyLlJ1bnRpbWVCaW5kZXJFeGNlcHRpb24NCk1pY3Jvc29mdC5DU2hhcnAuUnVudGltZUJpbmRlci5DU2hhcnBBcmd1bWVudEluZm8NCk1pY3Jvc29mdC5DU2hhcnAuUnVudGltZUJpbmRlci5DU2hhcnBBcmd1bWVudEluZm9GbGFncw0KTWljcm9zb2Z0LkNTaGFycC5SdW50aW1lQmluZGVyLkNTaGFycEJpbmRlckZsYWdzDQogDQpXaGVuIHVzaW5nIE51R2V0IDMueCB0aGlzIHBhY2thZ2UgcmVxdWlyZXMgYXQgbGVhc3QgdmVyc2lvbiAzLjQuPC9kZXNjcmlwdGlvbj4NCiAgICA8cmVsZWFzZU5vdGVzPmh0dHBzOi8vZ28ubWljcm9zb2Z0LmNvbS9md2xpbmsvP0xpbmtJRD03OTk0MTc8L3JlbGVhc2VOb3Rlcz4NCiAgICA8Y29weXJpZ2h0PsKpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9jb3B5cmlnaHQ+DQogICAgPHNlcnZpY2VhYmxlPnRydWU8L3NlcnZpY2VhYmxlPg0KICAgIDxkZXBlbmRlbmNpZXM+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9Ub3VjaDEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjUiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4wLjExIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkR5bmFtaWMuUnVudGltZSIgdmVyc2lvbj0iNC4wLjExIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xLkV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5PYmplY3RNb2RlbCIgdmVyc2lvbj0iNC4wLjEyIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMS4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4wLjEiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjAuMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlR5cGVFeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjAuMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMS4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjAiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkR5bmFtaWMuUnVudGltZSIgdmVyc2lvbj0iNC4wLjExIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMiIHZlcnNpb249IjQuMS4wIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMS4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRTdGFuZGFyZDEuMyI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uQ29sbGVjdGlvbnMiIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5EaWFnbm9zdGljcy5EZWJ1ZyIgdmVyc2lvbj0iNC4wLjExIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkR5bmFtaWMuUnVudGltZSIgdmVyc2lvbj0iNC4wLjExIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLkdsb2JhbGl6YXRpb24iIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5MaW5xLkV4cHJlc3Npb25zIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5PYmplY3RNb2RlbCIgdmVyc2lvbj0iNC4wLjEyIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24iIHZlcnNpb249IjQuMS4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlZmxlY3Rpb24uRXh0ZW5zaW9ucyIgdmVyc2lvbj0iNC4wLjEiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVmbGVjdGlvbi5QcmltaXRpdmVzIiB2ZXJzaW9uPSI0LjAuMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZWZsZWN0aW9uLlR5cGVFeHRlbnNpb25zIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VNYW5hZ2VyIiB2ZXJzaW9uPSI0LjAuMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lLkV4dGVuc2lvbnMiIHZlcnNpb249IjQuMS4wIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzIiB2ZXJzaW9uPSI0LjEuMCIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5UaHJlYWRpbmciIHZlcnNpb249IjQuMC4xMSIgZXhjbHVkZT0iQ29tcGlsZSIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUUG9ydGFibGUwLjAtUHJvZmlsZTI1OSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3M4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmU4LjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJXaW5kb3dzUGhvbmVBcHA4LjEiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uTWFjMi4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5UVk9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZGVwZW5kZW5jaWVzPg0KICAgIDxmcmFtZXdvcmtBc3NlbWJsaWVzPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iTWljcm9zb2Z0LkNTaGFycCIgdGFyZ2V0RnJhbWV3b3JrPSJNb25vQW5kcm9pZDEuMCIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Ik1pY3Jvc29mdC5DU2hhcnAiIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iTWljcm9zb2Z0LkNTaGFycCIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iTWljcm9zb2Z0LkNTaGFycCIgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLmlPUzEuMCIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Ik1pY3Jvc29mdC5DU2hhcnAiIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJNaWNyb3NvZnQuQ1NoYXJwIiB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uVFZPUzEuMCIgLz4NCiAgICAgIDxmcmFtZXdvcmtBc3NlbWJseSBhc3NlbWJseU5hbWU9Ik1pY3Jvc29mdC5DU2hhcnAiIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5XYXRjaE9TMS4wIiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:55 GMT
- request:
    method: get
    uri: https://api.nuget.org/v3-flatcontainer/system.runtime.serialization.primitives/4.1.1/system.runtime.serialization.primitives.nuspec
    body:
      encoding: US-ASCII
      string: ''
    headers:
      user-agent:
      - dependabot-core/0.220.0 excon/0.99.0 ruby/3.1.4 (aarch64-linux) (+https://github.com/dependabot/dependabot-core)
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Tue, 22 Aug 2023 17:41:55 GMT
      content-type:
      - text/xml
      content-length:
      - '3227'
      connection:
      - keep-alive
      cache-control:
      - public, max-age=86400
      last-modified:
      - Thu, 13 Dec 2018 23:03:36 GMT
      etag:
      - '0x8D6614F369CACE7'
      x-ms-request-id:
      - 867b9881-701e-006a-2c1f-d565df000000
      x-ms-version:
      - '2009-09-19'
      x-ms-lease-status:
      - unlocked
      x-ms-blob-type:
      - BlockBlob
      access-control-expose-headers:
      - x-ms-request-id,Server,x-ms-version,Content-Type,Cache-Control,Last-Modified,ETag,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding
      access-control-allow-origin:
      - "*"
      x-azure-ref:
      - 20230822T174155Z-k89pmaugft4pvcmkx160mg3kcs000000025000000000cd10
      x-cache:
      - TCP_MISS
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      accept-ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxwYWNrYWdlIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3BhY2thZ2luZy8yMDEzLzA1L251c3BlYy54c2QiPg0KICA8bWV0YWRhdGEgbWluQ2xpZW50VmVyc2lvbj0iMi4xMiI+DQogICAgPGlkPlN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uUHJpbWl0aXZlczwvaWQ+DQogICAgPHZlcnNpb24+NC4xLjE8L3ZlcnNpb24+DQogICAgPHRpdGxlPlN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uUHJpbWl0aXZlczwvdGl0bGU+DQogICAgPGF1dGhvcnM+TWljcm9zb2Z0PC9hdXRob3JzPg0KICAgIDxvd25lcnM+bWljcm9zb2Z0LGRvdG5ldGZyYW1ld29yazwvb3duZXJzPg0KICAgIDxyZXF1aXJlTGljZW5zZUFjY2VwdGFuY2U+dHJ1ZTwvcmVxdWlyZUxpY2Vuc2VBY2NlcHRhbmNlPg0KICAgIDxsaWNlbnNlVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lkPTMyOTc3MDwvbGljZW5zZVVybD4NCiAgICA8cHJvamVjdFVybD5odHRwczovL2RvdC5uZXQvPC9wcm9qZWN0VXJsPg0KICAgIDxpY29uVXJsPmh0dHA6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTI4ODg1OTwvaWNvblVybD4NCiAgICA8ZGVzY3JpcHRpb24+UHJvdmlkZXMgY29tbW9uIHR5cGVzLCBpbmNsdWRpbmcgU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5EYXRhQ29udHJhY3RBdHRyaWJ1dGUsIGZvciBsaWJyYXJpZXMgdGhhdCBzdXBwb3J0IGRhdGEgY29udHJhY3Qgc2VyaWFsaXphdGlvbi4NCg0KQ29tbW9ubHkgVXNlZCBUeXBlczoNClN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uU3RyZWFtaW5nQ29udGV4dA0KU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5PbkRlc2VyaWFsaXppbmdBdHRyaWJ1dGUNClN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uT25EZXNlcmlhbGl6ZWRBdHRyaWJ1dGUNClN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uT25TZXJpYWxpemluZ0F0dHJpYnV0ZQ0KU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5PblNlcmlhbGl6ZWRBdHRyaWJ1dGUNClN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uRW51bU1lbWJlckF0dHJpYnV0ZQ0KU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5EYXRhTWVtYmVyQXR0cmlidXRlDQpTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLkRhdGFDb250cmFjdEF0dHJpYnV0ZQ0KU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5JZ25vcmVEYXRhTWVtYmVyQXR0cmlidXRlDQpTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uLlNlcmlhbGl6YXRpb25FeGNlcHRpb24NCiANCldoZW4gdXNpbmcgTnVHZXQgMy54IHRoaXMgcGFja2FnZSByZXF1aXJlcyBhdCBsZWFzdCB2ZXJzaW9uIDMuNC48L2Rlc2NyaXB0aW9uPg0KICAgIDxyZWxlYXNlTm90ZXM+aHR0cHM6Ly9nby5taWNyb3NvZnQuY29tL2Z3bGluay8/TGlua0lEPTc5OTQxNzwvcmVsZWFzZU5vdGVzPg0KICAgIDxjb3B5cmlnaHQ+wqkgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC48L2NvcHlyaWdodD4NCiAgICA8c2VydmljZWFibGU+dHJ1ZTwvc2VydmljZWFibGU+DQogICAgPGRlcGVuZGVuY2llcz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ik1vbm9BbmRyb2lkMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iTW9ub1RvdWNoMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVEZyYW1ld29yazQuNSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRGcmFtZXdvcms0LjYiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUQ29yZTUuMCI+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlTWFuYWdlciIgdmVyc2lvbj0iNC4wLjEiIGV4Y2x1ZGU9IkNvbXBpbGUiIC8+DQogICAgICAgIDxkZXBlbmRlbmN5IGlkPSJTeXN0ZW0uUnVudGltZSIgdmVyc2lvbj0iNC4xLjAiIC8+DQogICAgICA8L2dyb3VwPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iLk5FVFN0YW5kYXJkMS4wIj4NCiAgICAgICAgPGRlcGVuZGVuY3kgaWQ9IlN5c3RlbS5SdW50aW1lIiB2ZXJzaW9uPSI0LjEuMCIgLz4NCiAgICAgIDwvZ3JvdXA+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSIuTkVUU3RhbmRhcmQxLjMiPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZU1hbmFnZXIiIHZlcnNpb249IjQuMC4xIiBleGNsdWRlPSJDb21waWxlIiAvPg0KICAgICAgICA8ZGVwZW5kZW5jeSBpZD0iU3lzdGVtLlJ1bnRpbWUiIHZlcnNpb249IjQuMS4wIiAvPg0KICAgICAgPC9ncm91cD4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9Ii5ORVRQb3J0YWJsZTAuMC1Qcm9maWxlMjU5IiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iV2luZG93czguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZTguMCIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IldpbmRvd3NQaG9uZUFwcDguMSIgLz4NCiAgICAgIDxncm91cCB0YXJnZXRGcmFtZXdvcms9IlhhbWFyaW4uaU9TMS4wIiAvPg0KICAgICAgPGdyb3VwIHRhcmdldEZyYW1ld29yaz0iWGFtYXJpbi5NYWMyLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLlRWT1MxLjAiIC8+DQogICAgICA8Z3JvdXAgdGFyZ2V0RnJhbWV3b3JrPSJYYW1hcmluLldhdGNoT1MxLjAiIC8+DQogICAgPC9kZXBlbmRlbmNpZXM+DQogICAgPGZyYW1ld29ya0Fzc2VtYmxpZXM+DQogICAgICA8ZnJhbWV3b3JrQXNzZW1ibHkgYXNzZW1ibHlOYW1lPSJtc2NvcmxpYiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC41IiAvPg0KICAgICAgPGZyYW1ld29ya0Fzc2VtYmx5IGFzc2VtYmx5TmFtZT0iU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbiIgdGFyZ2V0RnJhbWV3b3JrPSIuTkVURnJhbWV3b3JrNC42IiAvPg0KICAgIDwvZnJhbWV3b3JrQXNzZW1ibGllcz4NCiAgPC9tZXRhZGF0YT4NCjwvcGFja2FnZT4=
  recorded_at: Tue, 22 Aug 2023 17:41:55 GMT
recorded_with: VCR 6.2.0
